/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var main_exports={};__export(main_exports,{default:()=>NoteInFolder});module.exports=__toCommonJS(main_exports);var consoleLogger={type:"logger",log(args){this.output("log",args)},warn(args){this.output("warn",args)},error(args){this.output("error",args)},output(type,args){console&&console[type]&&console[type].apply(console,args)}},Logger=class _Logger{constructor(concreteLogger){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.init(concreteLogger,options)}init(concreteLogger){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.prefix=options.prefix||"i18next:",this.logger=concreteLogger||consoleLogger,this.options=options,this.debug=options.debug}log(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return this.forward(args,"log","",!0)}warn(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];return this.forward(args,"warn","",!0)}error(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++)args[_key3]=arguments[_key3];return this.forward(args,"error","")}deprecate(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++)args[_key4]=arguments[_key4];return this.forward(args,"warn","WARNING DEPRECATED: ",!0)}forward(args,lvl,prefix,debugOnly){return debugOnly&&!this.debug?null:(typeof args[0]=="string"&&(args[0]=`${prefix}${this.prefix} ${args[0]}`),this.logger[lvl](args))}create(moduleName){return new _Logger(this.logger,{prefix:`${this.prefix}:${moduleName}:`,...this.options})}clone(options){return options=options||this.options,options.prefix=options.prefix||this.prefix,new _Logger(this.logger,options)}},baseLogger=new Logger,EventEmitter=class{constructor(){this.observers={}}on(events,listener){return events.split(" ").forEach(event=>{this.observers[event]||(this.observers[event]=new Map);let numListeners=this.observers[event].get(listener)||0;this.observers[event].set(listener,numListeners+1)}),this}off(event,listener){if(this.observers[event]){if(!listener){delete this.observers[event];return}this.observers[event].delete(listener)}}emit(event){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];this.observers[event]&&Array.from(this.observers[event].entries()).forEach(_ref=>{let[observer,numTimesAdded]=_ref;for(let i=0;i<numTimesAdded;i++)observer(...args)}),this.observers["*"]&&Array.from(this.observers["*"].entries()).forEach(_ref2=>{let[observer,numTimesAdded]=_ref2;for(let i=0;i<numTimesAdded;i++)observer.apply(observer,[event,...args])})}};function defer(){let res,rej,promise=new Promise((resolve,reject)=>{res=resolve,rej=reject});return promise.resolve=res,promise.reject=rej,promise}function makeString(object){return object==null?"":""+object}function copy(a,s,t2){a.forEach(m=>{s[m]&&(t2[m]=s[m])})}var lastOfPathSeparatorRegExp=/###/g;function getLastOfPath(object,path3,Empty){function cleanKey(key){return key&&key.indexOf("###")>-1?key.replace(lastOfPathSeparatorRegExp,"."):key}function canNotTraverseDeeper(){return!object||typeof object=="string"}let stack=typeof path3!="string"?path3:path3.split("."),stackIndex=0;for(;stackIndex<stack.length-1;){if(canNotTraverseDeeper())return{};let key=cleanKey(stack[stackIndex]);!object[key]&&Empty&&(object[key]=new Empty),Object.prototype.hasOwnProperty.call(object,key)?object=object[key]:object={},++stackIndex}return canNotTraverseDeeper()?{}:{obj:object,k:cleanKey(stack[stackIndex])}}function setPath(object,path3,newValue){let{obj,k}=getLastOfPath(object,path3,Object);if(obj!==void 0||path3.length===1){obj[k]=newValue;return}let e=path3[path3.length-1],p=path3.slice(0,path3.length-1),last=getLastOfPath(object,p,Object);for(;last.obj===void 0&&p.length;)e=`${p[p.length-1]}.${e}`,p=p.slice(0,p.length-1),last=getLastOfPath(object,p,Object),last&&last.obj&&typeof last.obj[`${last.k}.${e}`]<"u"&&(last.obj=void 0);last.obj[`${last.k}.${e}`]=newValue}function pushPath(object,path3,newValue,concat){let{obj,k}=getLastOfPath(object,path3,Object);obj[k]=obj[k]||[],concat&&(obj[k]=obj[k].concat(newValue)),concat||obj[k].push(newValue)}function getPath(object,path3){let{obj,k}=getLastOfPath(object,path3);if(obj)return obj[k]}function getPathWithDefaults(data,defaultData,key){let value=getPath(data,key);return value!==void 0?value:getPath(defaultData,key)}function deepExtend(target,source,overwrite){for(let prop in source)prop!=="__proto__"&&prop!=="constructor"&&(prop in target?typeof target[prop]=="string"||target[prop]instanceof String||typeof source[prop]=="string"||source[prop]instanceof String?overwrite&&(target[prop]=source[prop]):deepExtend(target[prop],source[prop],overwrite):target[prop]=source[prop]);return target}function regexEscape(str){return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var _entityMap={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function escape(data){return typeof data=="string"?data.replace(/[&<>"'\/]/g,s=>_entityMap[s]):data}var RegExpCache=class{constructor(capacity){this.capacity=capacity,this.regExpMap=new Map,this.regExpQueue=[]}getRegExp(pattern){let regExpFromCache=this.regExpMap.get(pattern);if(regExpFromCache!==void 0)return regExpFromCache;let regExpNew=new RegExp(pattern);return this.regExpQueue.length===this.capacity&&this.regExpMap.delete(this.regExpQueue.shift()),this.regExpMap.set(pattern,regExpNew),this.regExpQueue.push(pattern),regExpNew}},chars=[" ",",","?","!",";"],looksLikeObjectPathRegExpCache=new RegExpCache(20);function looksLikeObjectPath(key,nsSeparator,keySeparator){nsSeparator=nsSeparator||"",keySeparator=keySeparator||"";let possibleChars=chars.filter(c=>nsSeparator.indexOf(c)<0&&keySeparator.indexOf(c)<0);if(possibleChars.length===0)return!0;let r=looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c=>c==="?"?"\\?":c).join("|")})`),matched=!r.test(key);if(!matched){let ki=key.indexOf(keySeparator);ki>0&&!r.test(key.substring(0,ki))&&(matched=!0)}return matched}function deepFind(obj,path3){let keySeparator=arguments.length>2&&arguments[2]!==void 0?arguments[2]:".";if(!obj)return;if(obj[path3])return obj[path3];let tokens=path3.split(keySeparator),current=obj;for(let i=0;i<tokens.length;){if(!current||typeof current!="object")return;let next,nextPath="";for(let j=i;j<tokens.length;++j)if(j!==i&&(nextPath+=keySeparator),nextPath+=tokens[j],next=current[nextPath],next!==void 0){if(["string","number","boolean"].indexOf(typeof next)>-1&&j<tokens.length-1)continue;i+=j-i+1;break}current=next}return current}function getCleanedCode(code){return code&&code.indexOf("_")>0?code.replace("_","-"):code}var ResourceStore=class extends EventEmitter{constructor(data){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{ns:["translation"],defaultNS:"translation"};super(),this.data=data||{},this.options=options,this.options.keySeparator===void 0&&(this.options.keySeparator="."),this.options.ignoreJSONStructure===void 0&&(this.options.ignoreJSONStructure=!0)}addNamespaces(ns){this.options.ns.indexOf(ns)<0&&this.options.ns.push(ns)}removeNamespaces(ns){let index=this.options.ns.indexOf(ns);index>-1&&this.options.ns.splice(index,1)}getResource(lng,ns,key){let options=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},keySeparator=options.keySeparator!==void 0?options.keySeparator:this.options.keySeparator,ignoreJSONStructure=options.ignoreJSONStructure!==void 0?options.ignoreJSONStructure:this.options.ignoreJSONStructure,path3;lng.indexOf(".")>-1?path3=lng.split("."):(path3=[lng,ns],key&&(Array.isArray(key)?path3.push(...key):typeof key=="string"&&keySeparator?path3.push(...key.split(keySeparator)):path3.push(key)));let result=getPath(this.data,path3);return!result&&!ns&&!key&&lng.indexOf(".")>-1&&(lng=path3[0],ns=path3[1],key=path3.slice(2).join(".")),result||!ignoreJSONStructure||typeof key!="string"?result:deepFind(this.data&&this.data[lng]&&this.data[lng][ns],key,keySeparator)}addResource(lng,ns,key,value){let options=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{silent:!1},keySeparator=options.keySeparator!==void 0?options.keySeparator:this.options.keySeparator,path3=[lng,ns];key&&(path3=path3.concat(keySeparator?key.split(keySeparator):key)),lng.indexOf(".")>-1&&(path3=lng.split("."),value=ns,ns=path3[1]),this.addNamespaces(ns),setPath(this.data,path3,value),options.silent||this.emit("added",lng,ns,key,value)}addResources(lng,ns,resources){let options=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{silent:!1};for(let m in resources)(typeof resources[m]=="string"||Array.isArray(resources[m]))&&this.addResource(lng,ns,m,resources[m],{silent:!0});options.silent||this.emit("added",lng,ns,resources)}addResourceBundle(lng,ns,resources,deep,overwrite){let options=arguments.length>5&&arguments[5]!==void 0?arguments[5]:{silent:!1,skipCopy:!1},path3=[lng,ns];lng.indexOf(".")>-1&&(path3=lng.split("."),deep=resources,resources=ns,ns=path3[1]),this.addNamespaces(ns);let pack=getPath(this.data,path3)||{};options.skipCopy||(resources=JSON.parse(JSON.stringify(resources))),deep?deepExtend(pack,resources,overwrite):pack={...pack,...resources},setPath(this.data,path3,pack),options.silent||this.emit("added",lng,ns,resources)}removeResourceBundle(lng,ns){this.hasResourceBundle(lng,ns)&&delete this.data[lng][ns],this.removeNamespaces(ns),this.emit("removed",lng,ns)}hasResourceBundle(lng,ns){return this.getResource(lng,ns)!==void 0}getResourceBundle(lng,ns){return ns||(ns=this.options.defaultNS),this.options.compatibilityAPI==="v1"?{...this.getResource(lng,ns)}:this.getResource(lng,ns)}getDataByLanguage(lng){return this.data[lng]}hasLanguageSomeTranslations(lng){let data=this.getDataByLanguage(lng);return!!(data&&Object.keys(data)||[]).find(v=>data[v]&&Object.keys(data[v]).length>0)}toJSON(){return this.data}},postProcessor={processors:{},addPostProcessor(module2){this.processors[module2.name]=module2},handle(processors,value,key,options,translator){return processors.forEach(processor=>{this.processors[processor]&&(value=this.processors[processor].process(value,key,options,translator))}),value}},checkedLoadedFor={},Translator=class _Translator extends EventEmitter{constructor(services){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};super(),copy(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],services,this),this.options=options,this.options.keySeparator===void 0&&(this.options.keySeparator="."),this.logger=baseLogger.create("translator")}changeLanguage(lng){lng&&(this.language=lng)}exists(key){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{interpolation:{}};if(key==null)return!1;let resolved=this.resolve(key,options);return resolved&&resolved.res!==void 0}extractFromKey(key,options){let nsSeparator=options.nsSeparator!==void 0?options.nsSeparator:this.options.nsSeparator;nsSeparator===void 0&&(nsSeparator=":");let keySeparator=options.keySeparator!==void 0?options.keySeparator:this.options.keySeparator,namespaces=options.ns||this.options.defaultNS||[],wouldCheckForNsInKey=nsSeparator&&key.indexOf(nsSeparator)>-1,seemsNaturalLanguage=!this.options.userDefinedKeySeparator&&!options.keySeparator&&!this.options.userDefinedNsSeparator&&!options.nsSeparator&&!looksLikeObjectPath(key,nsSeparator,keySeparator);if(wouldCheckForNsInKey&&!seemsNaturalLanguage){let m=key.match(this.interpolator.nestingRegexp);if(m&&m.length>0)return{key,namespaces};let parts=key.split(nsSeparator);(nsSeparator!==keySeparator||nsSeparator===keySeparator&&this.options.ns.indexOf(parts[0])>-1)&&(namespaces=parts.shift()),key=parts.join(keySeparator)}return typeof namespaces=="string"&&(namespaces=[namespaces]),{key,namespaces}}translate(keys,options,lastKey){if(typeof options!="object"&&this.options.overloadTranslationOptionHandler&&(options=this.options.overloadTranslationOptionHandler(arguments)),typeof options=="object"&&(options={...options}),options||(options={}),keys==null)return"";Array.isArray(keys)||(keys=[String(keys)]);let returnDetails=options.returnDetails!==void 0?options.returnDetails:this.options.returnDetails,keySeparator=options.keySeparator!==void 0?options.keySeparator:this.options.keySeparator,{key,namespaces}=this.extractFromKey(keys[keys.length-1],options),namespace=namespaces[namespaces.length-1],lng=options.lng||this.language,appendNamespaceToCIMode=options.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(lng&&lng.toLowerCase()==="cimode"){if(appendNamespaceToCIMode){let nsSeparator=options.nsSeparator||this.options.nsSeparator;return returnDetails?{res:`${namespace}${nsSeparator}${key}`,usedKey:key,exactUsedKey:key,usedLng:lng,usedNS:namespace,usedParams:this.getUsedParamsDetails(options)}:`${namespace}${nsSeparator}${key}`}return returnDetails?{res:key,usedKey:key,exactUsedKey:key,usedLng:lng,usedNS:namespace,usedParams:this.getUsedParamsDetails(options)}:key}let resolved=this.resolve(keys,options),res=resolved&&resolved.res,resUsedKey=resolved&&resolved.usedKey||key,resExactUsedKey=resolved&&resolved.exactUsedKey||key,resType=Object.prototype.toString.apply(res),noObject=["[object Number]","[object Function]","[object RegExp]"],joinArrays=options.joinArrays!==void 0?options.joinArrays:this.options.joinArrays,handleAsObjectInI18nFormat=!this.i18nFormat||this.i18nFormat.handleAsObject;if(handleAsObjectInI18nFormat&&res&&(typeof res!="string"&&typeof res!="boolean"&&typeof res!="number")&&noObject.indexOf(resType)<0&&!(typeof joinArrays=="string"&&Array.isArray(res))){if(!options.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");let r=this.options.returnedObjectHandler?this.options.returnedObjectHandler(resUsedKey,res,{...options,ns:namespaces}):`key '${key} (${this.language})' returned an object instead of string.`;return returnDetails?(resolved.res=r,resolved.usedParams=this.getUsedParamsDetails(options),resolved):r}if(keySeparator){let resTypeIsArray=Array.isArray(res),copy2=resTypeIsArray?[]:{},newKeyToUse=resTypeIsArray?resExactUsedKey:resUsedKey;for(let m in res)if(Object.prototype.hasOwnProperty.call(res,m)){let deepKey=`${newKeyToUse}${keySeparator}${m}`;copy2[m]=this.translate(deepKey,{...options,joinArrays:!1,ns:namespaces}),copy2[m]===deepKey&&(copy2[m]=res[m])}res=copy2}}else if(handleAsObjectInI18nFormat&&typeof joinArrays=="string"&&Array.isArray(res))res=res.join(joinArrays),res&&(res=this.extendTranslation(res,keys,options,lastKey));else{let usedDefault=!1,usedKey=!1,needsPluralHandling=options.count!==void 0&&typeof options.count!="string",hasDefaultValue=_Translator.hasDefaultValue(options),defaultValueSuffix=needsPluralHandling?this.pluralResolver.getSuffix(lng,options.count,options):"",defaultValueSuffixOrdinalFallback=options.ordinal&&needsPluralHandling?this.pluralResolver.getSuffix(lng,options.count,{ordinal:!1}):"",needsZeroSuffixLookup=needsPluralHandling&&!options.ordinal&&options.count===0&&this.pluralResolver.shouldUseIntlApi(),defaultValue=needsZeroSuffixLookup&&options[`defaultValue${this.options.pluralSeparator}zero`]||options[`defaultValue${defaultValueSuffix}`]||options[`defaultValue${defaultValueSuffixOrdinalFallback}`]||options.defaultValue;!this.isValidLookup(res)&&hasDefaultValue&&(usedDefault=!0,res=defaultValue),this.isValidLookup(res)||(usedKey=!0,res=key);let resForMissing=(options.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey)&&usedKey?void 0:res,updateMissing=hasDefaultValue&&defaultValue!==res&&this.options.updateMissing;if(usedKey||usedDefault||updateMissing){if(this.logger.log(updateMissing?"updateKey":"missingKey",lng,namespace,key,updateMissing?defaultValue:res),keySeparator){let fk=this.resolve(key,{...options,keySeparator:!1});fk&&fk.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}let lngs=[],fallbackLngs=this.languageUtils.getFallbackCodes(this.options.fallbackLng,options.lng||this.language);if(this.options.saveMissingTo==="fallback"&&fallbackLngs&&fallbackLngs[0])for(let i=0;i<fallbackLngs.length;i++)lngs.push(fallbackLngs[i]);else this.options.saveMissingTo==="all"?lngs=this.languageUtils.toResolveHierarchy(options.lng||this.language):lngs.push(options.lng||this.language);let send=(l,k,specificDefaultValue)=>{let defaultForMissing=hasDefaultValue&&specificDefaultValue!==res?specificDefaultValue:resForMissing;this.options.missingKeyHandler?this.options.missingKeyHandler(l,namespace,k,defaultForMissing,updateMissing,options):this.backendConnector&&this.backendConnector.saveMissing&&this.backendConnector.saveMissing(l,namespace,k,defaultForMissing,updateMissing,options),this.emit("missingKey",l,namespace,k,res)};this.options.saveMissing&&(this.options.saveMissingPlurals&&needsPluralHandling?lngs.forEach(language=>{let suffixes=this.pluralResolver.getSuffixes(language,options);needsZeroSuffixLookup&&options[`defaultValue${this.options.pluralSeparator}zero`]&&suffixes.indexOf(`${this.options.pluralSeparator}zero`)<0&&suffixes.push(`${this.options.pluralSeparator}zero`),suffixes.forEach(suffix=>{send([language],key+suffix,options[`defaultValue${suffix}`]||defaultValue)})}):send(lngs,key,defaultValue))}res=this.extendTranslation(res,keys,options,resolved,lastKey),usedKey&&res===key&&this.options.appendNamespaceToMissingKey&&(res=`${namespace}:${key}`),(usedKey||usedDefault)&&this.options.parseMissingKeyHandler&&(this.options.compatibilityAPI!=="v1"?res=this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?`${namespace}:${key}`:key,usedDefault?res:void 0):res=this.options.parseMissingKeyHandler(res))}return returnDetails?(resolved.res=res,resolved.usedParams=this.getUsedParamsDetails(options),resolved):res}extendTranslation(res,key,options,resolved,lastKey){var _this=this;if(this.i18nFormat&&this.i18nFormat.parse)res=this.i18nFormat.parse(res,{...this.options.interpolation.defaultVariables,...options},options.lng||this.language||resolved.usedLng,resolved.usedNS,resolved.usedKey,{resolved});else if(!options.skipInterpolation){options.interpolation&&this.interpolator.init({...options,interpolation:{...this.options.interpolation,...options.interpolation}});let skipOnVariables=typeof res=="string"&&(options&&options.interpolation&&options.interpolation.skipOnVariables!==void 0?options.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables),nestBef;if(skipOnVariables){let nb=res.match(this.interpolator.nestingRegexp);nestBef=nb&&nb.length}let data=options.replace&&typeof options.replace!="string"?options.replace:options;if(this.options.interpolation.defaultVariables&&(data={...this.options.interpolation.defaultVariables,...data}),res=this.interpolator.interpolate(res,data,options.lng||this.language,options),skipOnVariables){let na=res.match(this.interpolator.nestingRegexp),nestAft=na&&na.length;nestBef<nestAft&&(options.nest=!1)}!options.lng&&this.options.compatibilityAPI!=="v1"&&resolved&&resolved.res&&(options.lng=resolved.usedLng),options.nest!==!1&&(res=this.interpolator.nest(res,function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return lastKey&&lastKey[0]===args[0]&&!options.context?(_this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`),null):_this.translate(...args,key)},options)),options.interpolation&&this.interpolator.reset()}let postProcess=options.postProcess||this.options.postProcess,postProcessorNames=typeof postProcess=="string"?[postProcess]:postProcess;return res!=null&&postProcessorNames&&postProcessorNames.length&&options.applyPostProcessor!==!1&&(res=postProcessor.handle(postProcessorNames,res,key,this.options&&this.options.postProcessPassResolved?{i18nResolved:{...resolved,usedParams:this.getUsedParamsDetails(options)},...options}:options,this)),res}resolve(keys){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},found,usedKey,exactUsedKey,usedLng,usedNS;return typeof keys=="string"&&(keys=[keys]),keys.forEach(k=>{if(this.isValidLookup(found))return;let extracted=this.extractFromKey(k,options),key=extracted.key;usedKey=key;let namespaces=extracted.namespaces;this.options.fallbackNS&&(namespaces=namespaces.concat(this.options.fallbackNS));let needsPluralHandling=options.count!==void 0&&typeof options.count!="string",needsZeroSuffixLookup=needsPluralHandling&&!options.ordinal&&options.count===0&&this.pluralResolver.shouldUseIntlApi(),needsContextHandling=options.context!==void 0&&(typeof options.context=="string"||typeof options.context=="number")&&options.context!=="",codes=options.lngs?options.lngs:this.languageUtils.toResolveHierarchy(options.lng||this.language,options.fallbackLng);namespaces.forEach(ns=>{this.isValidLookup(found)||(usedNS=ns,!checkedLoadedFor[`${codes[0]}-${ns}`]&&this.utils&&this.utils.hasLoadedNamespace&&!this.utils.hasLoadedNamespace(usedNS)&&(checkedLoadedFor[`${codes[0]}-${ns}`]=!0,this.logger.warn(`key "${usedKey}" for languages "${codes.join(", ")}" won't get resolved as namespace "${usedNS}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),codes.forEach(code=>{if(this.isValidLookup(found))return;usedLng=code;let finalKeys=[key];if(this.i18nFormat&&this.i18nFormat.addLookupKeys)this.i18nFormat.addLookupKeys(finalKeys,key,code,ns,options);else{let pluralSuffix;needsPluralHandling&&(pluralSuffix=this.pluralResolver.getSuffix(code,options.count,options));let zeroSuffix=`${this.options.pluralSeparator}zero`,ordinalPrefix=`${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;if(needsPluralHandling&&(finalKeys.push(key+pluralSuffix),options.ordinal&&pluralSuffix.indexOf(ordinalPrefix)===0&&finalKeys.push(key+pluralSuffix.replace(ordinalPrefix,this.options.pluralSeparator)),needsZeroSuffixLookup&&finalKeys.push(key+zeroSuffix)),needsContextHandling){let contextKey=`${key}${this.options.contextSeparator}${options.context}`;finalKeys.push(contextKey),needsPluralHandling&&(finalKeys.push(contextKey+pluralSuffix),options.ordinal&&pluralSuffix.indexOf(ordinalPrefix)===0&&finalKeys.push(contextKey+pluralSuffix.replace(ordinalPrefix,this.options.pluralSeparator)),needsZeroSuffixLookup&&finalKeys.push(contextKey+zeroSuffix))}}let possibleKey;for(;possibleKey=finalKeys.pop();)this.isValidLookup(found)||(exactUsedKey=possibleKey,found=this.getResource(code,ns,possibleKey,options))}))})}),{res:found,usedKey,exactUsedKey,usedLng,usedNS}}isValidLookup(res){return res!==void 0&&!(!this.options.returnNull&&res===null)&&!(!this.options.returnEmptyString&&res==="")}getResource(code,ns,key){let options=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(code,ns,key,options):this.resourceStore.getResource(code,ns,key,options)}getUsedParamsDetails(){let options=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},optionsKeys=["defaultValue","ordinal","context","replace","lng","lngs","fallbackLng","ns","keySeparator","nsSeparator","returnObjects","returnDetails","joinArrays","postProcess","interpolation"],useOptionsReplaceForData=options.replace&&typeof options.replace!="string",data=useOptionsReplaceForData?options.replace:options;if(useOptionsReplaceForData&&typeof options.count<"u"&&(data.count=options.count),this.options.interpolation.defaultVariables&&(data={...this.options.interpolation.defaultVariables,...data}),!useOptionsReplaceForData){data={...data};for(let key of optionsKeys)delete data[key]}return data}static hasDefaultValue(options){let prefix="defaultValue";for(let option in options)if(Object.prototype.hasOwnProperty.call(options,option)&&prefix===option.substring(0,prefix.length)&&options[option]!==void 0)return!0;return!1}};function capitalize(string){return string.charAt(0).toUpperCase()+string.slice(1)}var LanguageUtil=class{constructor(options){this.options=options,this.supportedLngs=this.options.supportedLngs||!1,this.logger=baseLogger.create("languageUtils")}getScriptPartFromCode(code){if(code=getCleanedCode(code),!code||code.indexOf("-")<0)return null;let p=code.split("-");return p.length===2||(p.pop(),p[p.length-1].toLowerCase()==="x")?null:this.formatLanguageCode(p.join("-"))}getLanguagePartFromCode(code){if(code=getCleanedCode(code),!code||code.indexOf("-")<0)return code;let p=code.split("-");return this.formatLanguageCode(p[0])}formatLanguageCode(code){if(typeof code=="string"&&code.indexOf("-")>-1){let specialCases=["hans","hant","latn","cyrl","cans","mong","arab"],p=code.split("-");return this.options.lowerCaseLng?p=p.map(part=>part.toLowerCase()):p.length===2?(p[0]=p[0].toLowerCase(),p[1]=p[1].toUpperCase(),specialCases.indexOf(p[1].toLowerCase())>-1&&(p[1]=capitalize(p[1].toLowerCase()))):p.length===3&&(p[0]=p[0].toLowerCase(),p[1].length===2&&(p[1]=p[1].toUpperCase()),p[0]!=="sgn"&&p[2].length===2&&(p[2]=p[2].toUpperCase()),specialCases.indexOf(p[1].toLowerCase())>-1&&(p[1]=capitalize(p[1].toLowerCase())),specialCases.indexOf(p[2].toLowerCase())>-1&&(p[2]=capitalize(p[2].toLowerCase()))),p.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?code.toLowerCase():code}isSupportedCode(code){return(this.options.load==="languageOnly"||this.options.nonExplicitSupportedLngs)&&(code=this.getLanguagePartFromCode(code)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(code)>-1}getBestMatchFromCodes(codes){if(!codes)return null;let found;return codes.forEach(code=>{if(found)return;let cleanedLng=this.formatLanguageCode(code);(!this.options.supportedLngs||this.isSupportedCode(cleanedLng))&&(found=cleanedLng)}),!found&&this.options.supportedLngs&&codes.forEach(code=>{if(found)return;let lngOnly=this.getLanguagePartFromCode(code);if(this.isSupportedCode(lngOnly))return found=lngOnly;found=this.options.supportedLngs.find(supportedLng=>{if(supportedLng===lngOnly)return supportedLng;if(!(supportedLng.indexOf("-")<0&&lngOnly.indexOf("-")<0)&&(supportedLng.indexOf("-")>0&&lngOnly.indexOf("-")<0&&supportedLng.substring(0,supportedLng.indexOf("-"))===lngOnly||supportedLng.indexOf(lngOnly)===0&&lngOnly.length>1))return supportedLng})}),found||(found=this.getFallbackCodes(this.options.fallbackLng)[0]),found}getFallbackCodes(fallbacks,code){if(!fallbacks)return[];if(typeof fallbacks=="function"&&(fallbacks=fallbacks(code)),typeof fallbacks=="string"&&(fallbacks=[fallbacks]),Array.isArray(fallbacks))return fallbacks;if(!code)return fallbacks.default||[];let found=fallbacks[code];return found||(found=fallbacks[this.getScriptPartFromCode(code)]),found||(found=fallbacks[this.formatLanguageCode(code)]),found||(found=fallbacks[this.getLanguagePartFromCode(code)]),found||(found=fallbacks.default),found||[]}toResolveHierarchy(code,fallbackCode){let fallbackCodes=this.getFallbackCodes(fallbackCode||this.options.fallbackLng||[],code),codes=[],addCode=c=>{c&&(this.isSupportedCode(c)?codes.push(c):this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`))};return typeof code=="string"&&(code.indexOf("-")>-1||code.indexOf("_")>-1)?(this.options.load!=="languageOnly"&&addCode(this.formatLanguageCode(code)),this.options.load!=="languageOnly"&&this.options.load!=="currentOnly"&&addCode(this.getScriptPartFromCode(code)),this.options.load!=="currentOnly"&&addCode(this.getLanguagePartFromCode(code))):typeof code=="string"&&addCode(this.formatLanguageCode(code)),fallbackCodes.forEach(fc=>{codes.indexOf(fc)<0&&addCode(this.formatLanguageCode(fc))}),codes}},sets=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],_rulesPluralsTypes={1:function(n){return+(n>1)},2:function(n){return+(n!=1)},3:function(n){return 0},4:function(n){return n%10==1&&n%100!=11?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2},5:function(n){return n==0?0:n==1?1:n==2?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5},6:function(n){return n==1?0:n>=2&&n<=4?1:2},7:function(n){return n==1?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2},8:function(n){return n==1?0:n==2?1:n!=8&&n!=11?2:3},9:function(n){return+(n>=2)},10:function(n){return n==1?0:n==2?1:n<7?2:n<11?3:4},11:function(n){return n==1||n==11?0:n==2||n==12?1:n>2&&n<20?2:3},12:function(n){return+(n%10!=1||n%100==11)},13:function(n){return+(n!==0)},14:function(n){return n==1?0:n==2?1:n==3?2:3},15:function(n){return n%10==1&&n%100!=11?0:n%10>=2&&(n%100<10||n%100>=20)?1:2},16:function(n){return n%10==1&&n%100!=11?0:n!==0?1:2},17:function(n){return n==1||n%10==1&&n%100!=11?0:1},18:function(n){return n==0?0:n==1?1:2},19:function(n){return n==1?0:n==0||n%100>1&&n%100<11?1:n%100>10&&n%100<20?2:3},20:function(n){return n==1?0:n==0||n%100>0&&n%100<20?1:2},21:function(n){return n%100==1?1:n%100==2?2:n%100==3||n%100==4?3:0},22:function(n){return n==1?0:n==2?1:(n<0||n>10)&&n%10==0?2:3}},nonIntlVersions=["v1","v2","v3"],intlVersions=["v4"],suffixesOrder={zero:0,one:1,two:2,few:3,many:4,other:5};function createRules(){let rules={};return sets.forEach(set=>{set.lngs.forEach(l=>{rules[l]={numbers:set.nr,plurals:_rulesPluralsTypes[set.fc]}})}),rules}var PluralResolver=class{constructor(languageUtils){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.languageUtils=languageUtils,this.options=options,this.logger=baseLogger.create("pluralResolver"),(!this.options.compatibilityJSON||intlVersions.includes(this.options.compatibilityJSON))&&(typeof Intl>"u"||!Intl.PluralRules)&&(this.options.compatibilityJSON="v3",this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")),this.rules=createRules()}addRule(lng,obj){this.rules[lng]=obj}getRule(code){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(this.shouldUseIntlApi())try{return new Intl.PluralRules(getCleanedCode(code==="dev"?"en":code),{type:options.ordinal?"ordinal":"cardinal"})}catch{return}return this.rules[code]||this.rules[this.languageUtils.getLanguagePartFromCode(code)]}needsPlural(code){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},rule=this.getRule(code,options);return this.shouldUseIntlApi()?rule&&rule.resolvedOptions().pluralCategories.length>1:rule&&rule.numbers.length>1}getPluralFormsOfKey(code,key){let options=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};return this.getSuffixes(code,options).map(suffix=>`${key}${suffix}`)}getSuffixes(code){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},rule=this.getRule(code,options);return rule?this.shouldUseIntlApi()?rule.resolvedOptions().pluralCategories.sort((pluralCategory1,pluralCategory2)=>suffixesOrder[pluralCategory1]-suffixesOrder[pluralCategory2]).map(pluralCategory=>`${this.options.prepend}${options.ordinal?`ordinal${this.options.prepend}`:""}${pluralCategory}`):rule.numbers.map(number=>this.getSuffix(code,number,options)):[]}getSuffix(code,count){let options=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},rule=this.getRule(code,options);return rule?this.shouldUseIntlApi()?`${this.options.prepend}${options.ordinal?`ordinal${this.options.prepend}`:""}${rule.select(count)}`:this.getSuffixRetroCompatible(rule,count):(this.logger.warn(`no plural rule found for: ${code}`),"")}getSuffixRetroCompatible(rule,count){let idx=rule.noAbs?rule.plurals(count):rule.plurals(Math.abs(count)),suffix=rule.numbers[idx];this.options.simplifyPluralSuffix&&rule.numbers.length===2&&rule.numbers[0]===1&&(suffix===2?suffix="plural":suffix===1&&(suffix=""));let returnSuffix=()=>this.options.prepend&&suffix.toString()?this.options.prepend+suffix.toString():suffix.toString();return this.options.compatibilityJSON==="v1"?suffix===1?"":typeof suffix=="number"?`_plural_${suffix.toString()}`:returnSuffix():this.options.compatibilityJSON==="v2"||this.options.simplifyPluralSuffix&&rule.numbers.length===2&&rule.numbers[0]===1?returnSuffix():this.options.prepend&&idx.toString()?this.options.prepend+idx.toString():idx.toString()}shouldUseIntlApi(){return!nonIntlVersions.includes(this.options.compatibilityJSON)}};function deepFindWithDefaults(data,defaultData,key){let keySeparator=arguments.length>3&&arguments[3]!==void 0?arguments[3]:".",ignoreJSONStructure=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!0,path3=getPathWithDefaults(data,defaultData,key);return!path3&&ignoreJSONStructure&&typeof key=="string"&&(path3=deepFind(data,key,keySeparator),path3===void 0&&(path3=deepFind(defaultData,key,keySeparator))),path3}var Interpolator=class{constructor(){let options=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};this.logger=baseLogger.create("interpolator"),this.options=options,this.format=options.interpolation&&options.interpolation.format||(value=>value),this.init(options)}init(){let options=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};options.interpolation||(options.interpolation={escapeValue:!0});let{escape:escape$1,escapeValue,useRawValueToEscape,prefix,prefixEscaped,suffix,suffixEscaped,formatSeparator,unescapeSuffix,unescapePrefix,nestingPrefix,nestingPrefixEscaped,nestingSuffix,nestingSuffixEscaped,nestingOptionsSeparator,maxReplaces,alwaysFormat}=options.interpolation;this.escape=escape$1!==void 0?escape$1:escape,this.escapeValue=escapeValue!==void 0?escapeValue:!0,this.useRawValueToEscape=useRawValueToEscape!==void 0?useRawValueToEscape:!1,this.prefix=prefix?regexEscape(prefix):prefixEscaped||"{{",this.suffix=suffix?regexEscape(suffix):suffixEscaped||"}}",this.formatSeparator=formatSeparator||",",this.unescapePrefix=unescapeSuffix?"":unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":unescapeSuffix||"",this.nestingPrefix=nestingPrefix?regexEscape(nestingPrefix):nestingPrefixEscaped||regexEscape("$t("),this.nestingSuffix=nestingSuffix?regexEscape(nestingSuffix):nestingSuffixEscaped||regexEscape(")"),this.nestingOptionsSeparator=nestingOptionsSeparator||",",this.maxReplaces=maxReplaces||1e3,this.alwaysFormat=alwaysFormat!==void 0?alwaysFormat:!1,this.resetRegExp()}reset(){this.options&&this.init(this.options)}resetRegExp(){let getOrResetRegExp=(existingRegExp,pattern)=>existingRegExp&&existingRegExp.source===pattern?(existingRegExp.lastIndex=0,existingRegExp):new RegExp(pattern,"g");this.regexp=getOrResetRegExp(this.regexp,`${this.prefix}(.+?)${this.suffix}`),this.regexpUnescape=getOrResetRegExp(this.regexpUnescape,`${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`),this.nestingRegexp=getOrResetRegExp(this.nestingRegexp,`${this.nestingPrefix}(.+?)${this.nestingSuffix}`)}interpolate(str,data,lng,options){let match,value,replaces,defaultData=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function regexSafe(val){return val.replace(/\$/g,"$$$$")}let handleFormat=key=>{if(key.indexOf(this.formatSeparator)<0){let path3=deepFindWithDefaults(data,defaultData,key,this.options.keySeparator,this.options.ignoreJSONStructure);return this.alwaysFormat?this.format(path3,void 0,lng,{...options,...data,interpolationkey:key}):path3}let p=key.split(this.formatSeparator),k=p.shift().trim(),f=p.join(this.formatSeparator).trim();return this.format(deepFindWithDefaults(data,defaultData,k,this.options.keySeparator,this.options.ignoreJSONStructure),f,lng,{...options,...data,interpolationkey:k})};this.resetRegExp();let missingInterpolationHandler=options&&options.missingInterpolationHandler||this.options.missingInterpolationHandler,skipOnVariables=options&&options.interpolation&&options.interpolation.skipOnVariables!==void 0?options.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:val=>regexSafe(val)},{regex:this.regexp,safeValue:val=>this.escapeValue?regexSafe(this.escape(val)):regexSafe(val)}].forEach(todo=>{for(replaces=0;match=todo.regex.exec(str);){let matchedVar=match[1].trim();if(value=handleFormat(matchedVar),value===void 0)if(typeof missingInterpolationHandler=="function"){let temp=missingInterpolationHandler(str,match,options);value=typeof temp=="string"?temp:""}else if(options&&Object.prototype.hasOwnProperty.call(options,matchedVar))value="";else if(skipOnVariables){value=match[0];continue}else this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`),value="";else typeof value!="string"&&!this.useRawValueToEscape&&(value=makeString(value));let safeValue=todo.safeValue(value);if(str=str.replace(match[0],safeValue),skipOnVariables?(todo.regex.lastIndex+=value.length,todo.regex.lastIndex-=match[0].length):todo.regex.lastIndex=0,replaces++,replaces>=this.maxReplaces)break}}),str}nest(str,fc){let options=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},match,value,clonedOptions;function handleHasOptions(key,inheritedOptions){let sep=this.nestingOptionsSeparator;if(key.indexOf(sep)<0)return key;let c=key.split(new RegExp(`${sep}[ ]*{`)),optionsString=`{${c[1]}`;key=c[0],optionsString=this.interpolate(optionsString,clonedOptions);let matchedSingleQuotes=optionsString.match(/'/g),matchedDoubleQuotes=optionsString.match(/"/g);(matchedSingleQuotes&&matchedSingleQuotes.length%2===0&&!matchedDoubleQuotes||matchedDoubleQuotes.length%2!==0)&&(optionsString=optionsString.replace(/'/g,'"'));try{clonedOptions=JSON.parse(optionsString),inheritedOptions&&(clonedOptions={...inheritedOptions,...clonedOptions})}catch(e){return this.logger.warn(`failed parsing options string in nesting for key ${key}`,e),`${key}${sep}${optionsString}`}return clonedOptions.defaultValue&&clonedOptions.defaultValue.indexOf(this.prefix)>-1&&delete clonedOptions.defaultValue,key}for(;match=this.nestingRegexp.exec(str);){let formatters=[];clonedOptions={...options},clonedOptions=clonedOptions.replace&&typeof clonedOptions.replace!="string"?clonedOptions.replace:clonedOptions,clonedOptions.applyPostProcessor=!1,delete clonedOptions.defaultValue;let doReduce=!1;if(match[0].indexOf(this.formatSeparator)!==-1&&!/{.*}/.test(match[1])){let r=match[1].split(this.formatSeparator).map(elem=>elem.trim());match[1]=r.shift(),formatters=r,doReduce=!0}if(value=fc(handleHasOptions.call(this,match[1].trim(),clonedOptions),clonedOptions),value&&match[0]===str&&typeof value!="string")return value;typeof value!="string"&&(value=makeString(value)),value||(this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`),value=""),doReduce&&(value=formatters.reduce((v,f)=>this.format(v,f,options.lng,{...options,interpolationkey:match[1].trim()}),value.trim())),str=str.replace(match[0],value),this.regexp.lastIndex=0}return str}};function parseFormatStr(formatStr){let formatName=formatStr.toLowerCase().trim(),formatOptions={};if(formatStr.indexOf("(")>-1){let p=formatStr.split("(");formatName=p[0].toLowerCase().trim();let optStr=p[1].substring(0,p[1].length-1);formatName==="currency"&&optStr.indexOf(":")<0?formatOptions.currency||(formatOptions.currency=optStr.trim()):formatName==="relativetime"&&optStr.indexOf(":")<0?formatOptions.range||(formatOptions.range=optStr.trim()):optStr.split(";").forEach(opt=>{if(opt){let[key,...rest]=opt.split(":"),val=rest.join(":").trim().replace(/^'+|'+$/g,""),trimmedKey=key.trim();formatOptions[trimmedKey]||(formatOptions[trimmedKey]=val),val==="false"&&(formatOptions[trimmedKey]=!1),val==="true"&&(formatOptions[trimmedKey]=!0),isNaN(val)||(formatOptions[trimmedKey]=parseInt(val,10))}})}return{formatName,formatOptions}}function createCachedFormatter(fn){let cache={};return function(val,lng,options){let key=lng+JSON.stringify(options),formatter=cache[key];return formatter||(formatter=fn(getCleanedCode(lng),options),cache[key]=formatter),formatter(val)}}var Formatter=class{constructor(){let options=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};this.logger=baseLogger.create("formatter"),this.options=options,this.formats={number:createCachedFormatter((lng,opt)=>{let formatter=new Intl.NumberFormat(lng,{...opt});return val=>formatter.format(val)}),currency:createCachedFormatter((lng,opt)=>{let formatter=new Intl.NumberFormat(lng,{...opt,style:"currency"});return val=>formatter.format(val)}),datetime:createCachedFormatter((lng,opt)=>{let formatter=new Intl.DateTimeFormat(lng,{...opt});return val=>formatter.format(val)}),relativetime:createCachedFormatter((lng,opt)=>{let formatter=new Intl.RelativeTimeFormat(lng,{...opt});return val=>formatter.format(val,opt.range||"day")}),list:createCachedFormatter((lng,opt)=>{let formatter=new Intl.ListFormat(lng,{...opt});return val=>formatter.format(val)})},this.init(options)}init(services){let iOpts=(arguments.length>1&&arguments[1]!==void 0?arguments[1]:{interpolation:{}}).interpolation;this.formatSeparator=iOpts.formatSeparator?iOpts.formatSeparator:iOpts.formatSeparator||","}add(name,fc){this.formats[name.toLowerCase().trim()]=fc}addCached(name,fc){this.formats[name.toLowerCase().trim()]=createCachedFormatter(fc)}format(value,format,lng){let options=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};return format.split(this.formatSeparator).reduce((mem,f)=>{let{formatName,formatOptions}=parseFormatStr(f);if(this.formats[formatName]){let formatted=mem;try{let valOptions=options&&options.formatParams&&options.formatParams[options.interpolationkey]||{},l=valOptions.locale||valOptions.lng||options.locale||options.lng||lng;formatted=this.formats[formatName](mem,l,{...formatOptions,...options,...valOptions})}catch(error3){this.logger.warn(error3)}return formatted}else this.logger.warn(`there was no format function for ${formatName}`);return mem},value)}};function removePending(q,name){q.pending[name]!==void 0&&(delete q.pending[name],q.pendingCount--)}var Connector=class extends EventEmitter{constructor(backend,store,services){let options=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};super(),this.backend=backend,this.store=store,this.services=services,this.languageUtils=services.languageUtils,this.options=options,this.logger=baseLogger.create("backendConnector"),this.waitingReads=[],this.maxParallelReads=options.maxParallelReads||10,this.readingCalls=0,this.maxRetries=options.maxRetries>=0?options.maxRetries:5,this.retryTimeout=options.retryTimeout>=1?options.retryTimeout:350,this.state={},this.queue=[],this.backend&&this.backend.init&&this.backend.init(services,options.backend,options)}queueLoad(languages,namespaces,options,callback){let toLoad={},pending={},toLoadLanguages={},toLoadNamespaces={};return languages.forEach(lng=>{let hasAllNamespaces=!0;namespaces.forEach(ns=>{let name=`${lng}|${ns}`;!options.reload&&this.store.hasResourceBundle(lng,ns)?this.state[name]=2:this.state[name]<0||(this.state[name]===1?pending[name]===void 0&&(pending[name]=!0):(this.state[name]=1,hasAllNamespaces=!1,pending[name]===void 0&&(pending[name]=!0),toLoad[name]===void 0&&(toLoad[name]=!0),toLoadNamespaces[ns]===void 0&&(toLoadNamespaces[ns]=!0)))}),hasAllNamespaces||(toLoadLanguages[lng]=!0)}),(Object.keys(toLoad).length||Object.keys(pending).length)&&this.queue.push({pending,pendingCount:Object.keys(pending).length,loaded:{},errors:[],callback}),{toLoad:Object.keys(toLoad),pending:Object.keys(pending),toLoadLanguages:Object.keys(toLoadLanguages),toLoadNamespaces:Object.keys(toLoadNamespaces)}}loaded(name,err,data){let s=name.split("|"),lng=s[0],ns=s[1];err&&this.emit("failedLoading",lng,ns,err),data&&this.store.addResourceBundle(lng,ns,data,void 0,void 0,{skipCopy:!0}),this.state[name]=err?-1:2;let loaded={};this.queue.forEach(q=>{pushPath(q.loaded,[lng],ns),removePending(q,name),err&&q.errors.push(err),q.pendingCount===0&&!q.done&&(Object.keys(q.loaded).forEach(l=>{loaded[l]||(loaded[l]={});let loadedKeys=q.loaded[l];loadedKeys.length&&loadedKeys.forEach(n=>{loaded[l][n]===void 0&&(loaded[l][n]=!0)})}),q.done=!0,q.errors.length?q.callback(q.errors):q.callback())}),this.emit("loaded",loaded),this.queue=this.queue.filter(q=>!q.done)}read(lng,ns,fcName){let tried=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,wait=arguments.length>4&&arguments[4]!==void 0?arguments[4]:this.retryTimeout,callback=arguments.length>5?arguments[5]:void 0;if(!lng.length)return callback(null,{});if(this.readingCalls>=this.maxParallelReads){this.waitingReads.push({lng,ns,fcName,tried,wait,callback});return}this.readingCalls++;let resolver=(err,data)=>{if(this.readingCalls--,this.waitingReads.length>0){let next=this.waitingReads.shift();this.read(next.lng,next.ns,next.fcName,next.tried,next.wait,next.callback)}if(err&&data&&tried<this.maxRetries){setTimeout(()=>{this.read.call(this,lng,ns,fcName,tried+1,wait*2,callback)},wait);return}callback(err,data)},fc=this.backend[fcName].bind(this.backend);if(fc.length===2){try{let r=fc(lng,ns);r&&typeof r.then=="function"?r.then(data=>resolver(null,data)).catch(resolver):resolver(null,r)}catch(err){resolver(err)}return}return fc(lng,ns,resolver)}prepareLoading(languages,namespaces){let options=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},callback=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),callback&&callback();typeof languages=="string"&&(languages=this.languageUtils.toResolveHierarchy(languages)),typeof namespaces=="string"&&(namespaces=[namespaces]);let toLoad=this.queueLoad(languages,namespaces,options,callback);if(!toLoad.toLoad.length)return toLoad.pending.length||callback(),null;toLoad.toLoad.forEach(name=>{this.loadOne(name)})}load(languages,namespaces,callback){this.prepareLoading(languages,namespaces,{},callback)}reload(languages,namespaces,callback){this.prepareLoading(languages,namespaces,{reload:!0},callback)}loadOne(name){let prefix=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"",s=name.split("|"),lng=s[0],ns=s[1];this.read(lng,ns,"read",void 0,void 0,(err,data)=>{err&&this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`,err),!err&&data&&this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`,data),this.loaded(name,err,data)})}saveMissing(languages,namespace,key,fallbackValue,isUpdate){let options=arguments.length>5&&arguments[5]!==void 0?arguments[5]:{},clb=arguments.length>6&&arguments[6]!==void 0?arguments[6]:()=>{};if(this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(namespace)){this.logger.warn(`did not save key "${key}" as the namespace "${namespace}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");return}if(!(key==null||key==="")){if(this.backend&&this.backend.create){let opts={...options,isUpdate},fc=this.backend.create.bind(this.backend);if(fc.length<6)try{let r;fc.length===5?r=fc(languages,namespace,key,fallbackValue,opts):r=fc(languages,namespace,key,fallbackValue),r&&typeof r.then=="function"?r.then(data=>clb(null,data)).catch(clb):clb(null,r)}catch(err){clb(err)}else fc(languages,namespace,key,fallbackValue,clb,opts)}!languages||!languages[0]||this.store.addResource(languages[0],namespace,key,fallbackValue)}}};function get(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!1,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(args){let ret={};if(typeof args[1]=="object"&&(ret=args[1]),typeof args[1]=="string"&&(ret.defaultValue=args[1]),typeof args[2]=="string"&&(ret.tDescription=args[2]),typeof args[2]=="object"||typeof args[3]=="object"){let options=args[3]||args[2];Object.keys(options).forEach(key=>{ret[key]=options[key]})}return ret},interpolation:{escapeValue:!0,format:value=>value,prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}}function transformOptions(options){return typeof options.ns=="string"&&(options.ns=[options.ns]),typeof options.fallbackLng=="string"&&(options.fallbackLng=[options.fallbackLng]),typeof options.fallbackNS=="string"&&(options.fallbackNS=[options.fallbackNS]),options.supportedLngs&&options.supportedLngs.indexOf("cimode")<0&&(options.supportedLngs=options.supportedLngs.concat(["cimode"])),options}function noop(){}function bindMemberFunctions(inst){Object.getOwnPropertyNames(Object.getPrototypeOf(inst)).forEach(mem=>{typeof inst[mem]=="function"&&(inst[mem]=inst[mem].bind(inst))})}var I18n=class _I18n extends EventEmitter{constructor(){let options=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},callback=arguments.length>1?arguments[1]:void 0;if(super(),this.options=transformOptions(options),this.services={},this.logger=baseLogger,this.modules={external:[]},bindMemberFunctions(this),callback&&!this.isInitialized&&!options.isClone){if(!this.options.initImmediate)return this.init(options,callback),this;setTimeout(()=>{this.init(options,callback)},0)}}init(){var _this=this;let options=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},callback=arguments.length>1?arguments[1]:void 0;this.isInitializing=!0,typeof options=="function"&&(callback=options,options={}),!options.defaultNS&&options.defaultNS!==!1&&options.ns&&(typeof options.ns=="string"?options.defaultNS=options.ns:options.ns.indexOf("translation")<0&&(options.defaultNS=options.ns[0]));let defOpts=get();this.options={...defOpts,...this.options,...transformOptions(options)},this.options.compatibilityAPI!=="v1"&&(this.options.interpolation={...defOpts.interpolation,...this.options.interpolation}),options.keySeparator!==void 0&&(this.options.userDefinedKeySeparator=options.keySeparator),options.nsSeparator!==void 0&&(this.options.userDefinedNsSeparator=options.nsSeparator);function createClassOnDemand(ClassOrObject){return ClassOrObject?typeof ClassOrObject=="function"?new ClassOrObject:ClassOrObject:null}if(!this.options.isClone){this.modules.logger?baseLogger.init(createClassOnDemand(this.modules.logger),this.options):baseLogger.init(null,this.options);let formatter;this.modules.formatter?formatter=this.modules.formatter:typeof Intl<"u"&&(formatter=Formatter);let lu=new LanguageUtil(this.options);this.store=new ResourceStore(this.options.resources,this.options);let s=this.services;s.logger=baseLogger,s.resourceStore=this.store,s.languageUtils=lu,s.pluralResolver=new PluralResolver(lu,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),formatter&&(!this.options.interpolation.format||this.options.interpolation.format===defOpts.interpolation.format)&&(s.formatter=createClassOnDemand(formatter),s.formatter.init(s,this.options),this.options.interpolation.format=s.formatter.format.bind(s.formatter)),s.interpolator=new Interpolator(this.options),s.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},s.backendConnector=new Connector(createClassOnDemand(this.modules.backend),s.resourceStore,s,this.options),s.backendConnector.on("*",function(event){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];_this.emit(event,...args)}),this.modules.languageDetector&&(s.languageDetector=createClassOnDemand(this.modules.languageDetector),s.languageDetector.init&&s.languageDetector.init(s,this.options.detection,this.options)),this.modules.i18nFormat&&(s.i18nFormat=createClassOnDemand(this.modules.i18nFormat),s.i18nFormat.init&&s.i18nFormat.init(this)),this.translator=new Translator(this.services,this.options),this.translator.on("*",function(event){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];_this.emit(event,...args)}),this.modules.external.forEach(m=>{m.init&&m.init(this)})}if(this.format=this.options.interpolation.format,callback||(callback=noop),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){let codes=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);codes.length>0&&codes[0]!=="dev"&&(this.options.lng=codes[0])}!this.services.languageDetector&&!this.options.lng&&this.logger.warn("init: no languageDetector is used and no lng is defined"),["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"].forEach(fcName=>{this[fcName]=function(){return _this.store[fcName](...arguments)}}),["addResource","addResources","addResourceBundle","removeResourceBundle"].forEach(fcName=>{this[fcName]=function(){return _this.store[fcName](...arguments),_this}});let deferred=defer(),load=()=>{let finish=(err,t2)=>{this.isInitializing=!1,this.isInitialized&&!this.initializedStoreOnce&&this.logger.warn("init: i18next is already initialized. You should call init just once!"),this.isInitialized=!0,this.options.isClone||this.logger.log("initialized",this.options),this.emit("initialized",this.options),deferred.resolve(t2),callback(err,t2)};if(this.languages&&this.options.compatibilityAPI!=="v1"&&!this.isInitialized)return finish(null,this.t.bind(this));this.changeLanguage(this.options.lng,finish)};return this.options.resources||!this.options.initImmediate?load():setTimeout(load,0),deferred}loadResources(language){let usedCallback=arguments.length>1&&arguments[1]!==void 0?arguments[1]:noop,usedLng=typeof language=="string"?language:this.language;if(typeof language=="function"&&(usedCallback=language),!this.options.resources||this.options.partialBundledLanguages){if(usedLng&&usedLng.toLowerCase()==="cimode"&&(!this.options.preload||this.options.preload.length===0))return usedCallback();let toLoad=[],append=lng=>{if(!lng||lng==="cimode")return;this.services.languageUtils.toResolveHierarchy(lng).forEach(l=>{l!=="cimode"&&toLoad.indexOf(l)<0&&toLoad.push(l)})};usedLng?append(usedLng):this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(l=>append(l)),this.options.preload&&this.options.preload.forEach(l=>append(l)),this.services.backendConnector.load(toLoad,this.options.ns,e=>{!e&&!this.resolvedLanguage&&this.language&&this.setResolvedLanguage(this.language),usedCallback(e)})}else usedCallback(null)}reloadResources(lngs,ns,callback){let deferred=defer();return lngs||(lngs=this.languages),ns||(ns=this.options.ns),callback||(callback=noop),this.services.backendConnector.reload(lngs,ns,err=>{deferred.resolve(),callback(err)}),deferred}use(module2){if(!module2)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!module2.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return module2.type==="backend"&&(this.modules.backend=module2),(module2.type==="logger"||module2.log&&module2.warn&&module2.error)&&(this.modules.logger=module2),module2.type==="languageDetector"&&(this.modules.languageDetector=module2),module2.type==="i18nFormat"&&(this.modules.i18nFormat=module2),module2.type==="postProcessor"&&postProcessor.addPostProcessor(module2),module2.type==="formatter"&&(this.modules.formatter=module2),module2.type==="3rdParty"&&this.modules.external.push(module2),this}setResolvedLanguage(l){if(!(!l||!this.languages)&&!(["cimode","dev"].indexOf(l)>-1))for(let li=0;li<this.languages.length;li++){let lngInLngs=this.languages[li];if(!(["cimode","dev"].indexOf(lngInLngs)>-1)&&this.store.hasLanguageSomeTranslations(lngInLngs)){this.resolvedLanguage=lngInLngs;break}}}changeLanguage(lng,callback){var _this2=this;this.isLanguageChangingTo=lng;let deferred=defer();this.emit("languageChanging",lng);let setLngProps=l=>{this.language=l,this.languages=this.services.languageUtils.toResolveHierarchy(l),this.resolvedLanguage=void 0,this.setResolvedLanguage(l)},done=(err,l)=>{l?(setLngProps(l),this.translator.changeLanguage(l),this.isLanguageChangingTo=void 0,this.emit("languageChanged",l),this.logger.log("languageChanged",l)):this.isLanguageChangingTo=void 0,deferred.resolve(function(){return _this2.t(...arguments)}),callback&&callback(err,function(){return _this2.t(...arguments)})},setLng=lngs=>{!lng&&!lngs&&this.services.languageDetector&&(lngs=[]);let l=typeof lngs=="string"?lngs:this.services.languageUtils.getBestMatchFromCodes(lngs);l&&(this.language||setLngProps(l),this.translator.language||this.translator.changeLanguage(l),this.services.languageDetector&&this.services.languageDetector.cacheUserLanguage&&this.services.languageDetector.cacheUserLanguage(l)),this.loadResources(l,err=>{done(err,l)})};return!lng&&this.services.languageDetector&&!this.services.languageDetector.async?setLng(this.services.languageDetector.detect()):!lng&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect.length===0?this.services.languageDetector.detect().then(setLng):this.services.languageDetector.detect(setLng):setLng(lng),deferred}getFixedT(lng,ns,keyPrefix){var _this3=this;let fixedT=function(key,opts){let options;if(typeof opts!="object"){for(var _len3=arguments.length,rest=new Array(_len3>2?_len3-2:0),_key3=2;_key3<_len3;_key3++)rest[_key3-2]=arguments[_key3];options=_this3.options.overloadTranslationOptionHandler([key,opts].concat(rest))}else options={...opts};options.lng=options.lng||fixedT.lng,options.lngs=options.lngs||fixedT.lngs,options.ns=options.ns||fixedT.ns,options.keyPrefix=options.keyPrefix||keyPrefix||fixedT.keyPrefix;let keySeparator=_this3.options.keySeparator||".",resultKey;return options.keyPrefix&&Array.isArray(key)?resultKey=key.map(k=>`${options.keyPrefix}${keySeparator}${k}`):resultKey=options.keyPrefix?`${options.keyPrefix}${keySeparator}${key}`:key,_this3.t(resultKey,options)};return typeof lng=="string"?fixedT.lng=lng:fixedT.lngs=lng,fixedT.ns=ns,fixedT.keyPrefix=keyPrefix,fixedT}t(){return this.translator&&this.translator.translate(...arguments)}exists(){return this.translator&&this.translator.exists(...arguments)}setDefaultNamespace(ns){this.options.defaultNS=ns}hasLoadedNamespace(ns){let options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;let lng=options.lng||this.resolvedLanguage||this.languages[0],fallbackLng=this.options?this.options.fallbackLng:!1,lastLng=this.languages[this.languages.length-1];if(lng.toLowerCase()==="cimode")return!0;let loadNotPending=(l,n)=>{let loadState=this.services.backendConnector.state[`${l}|${n}`];return loadState===-1||loadState===2};if(options.precheck){let preResult=options.precheck(this,loadNotPending);if(preResult!==void 0)return preResult}return!!(this.hasResourceBundle(lng,ns)||!this.services.backendConnector.backend||this.options.resources&&!this.options.partialBundledLanguages||loadNotPending(lng,ns)&&(!fallbackLng||loadNotPending(lastLng,ns)))}loadNamespaces(ns,callback){let deferred=defer();return this.options.ns?(typeof ns=="string"&&(ns=[ns]),ns.forEach(n=>{this.options.ns.indexOf(n)<0&&this.options.ns.push(n)}),this.loadResources(err=>{deferred.resolve(),callback&&callback(err)}),deferred):(callback&&callback(),Promise.resolve())}loadLanguages(lngs,callback){let deferred=defer();typeof lngs=="string"&&(lngs=[lngs]);let preloaded=this.options.preload||[],newLngs=lngs.filter(lng=>preloaded.indexOf(lng)<0&&this.services.languageUtils.isSupportedCode(lng));return newLngs.length?(this.options.preload=preloaded.concat(newLngs),this.loadResources(err=>{deferred.resolve(),callback&&callback(err)}),deferred):(callback&&callback(),Promise.resolve())}dir(lng){if(lng||(lng=this.resolvedLanguage||(this.languages&&this.languages.length>0?this.languages[0]:this.language)),!lng)return"rtl";let rtlLngs=["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"],languageUtils=this.services&&this.services.languageUtils||new LanguageUtil(get());return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng))>-1||lng.toLowerCase().indexOf("-arab")>1?"rtl":"ltr"}static createInstance(){let options=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},callback=arguments.length>1?arguments[1]:void 0;return new _I18n(options,callback)}cloneInstance(){let options=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},callback=arguments.length>1&&arguments[1]!==void 0?arguments[1]:noop,forkResourceStore=options.forkResourceStore;forkResourceStore&&delete options.forkResourceStore;let mergedOptions={...this.options,...options,isClone:!0},clone=new _I18n(mergedOptions);return(options.debug!==void 0||options.prefix!==void 0)&&(clone.logger=clone.logger.clone(options)),["store","services","language"].forEach(m=>{clone[m]=this[m]}),clone.services={...this.services},clone.services.utils={hasLoadedNamespace:clone.hasLoadedNamespace.bind(clone)},forkResourceStore&&(clone.store=new ResourceStore(this.store.data,mergedOptions),clone.services.resourceStore=clone.store),clone.translator=new Translator(clone.services,mergedOptions),clone.translator.on("*",function(event){for(var _len4=arguments.length,args=new Array(_len4>1?_len4-1:0),_key4=1;_key4<_len4;_key4++)args[_key4-1]=arguments[_key4];clone.emit(event,...args)}),clone.init(mergedOptions,callback),clone.translator.options=mergedOptions,clone.translator.backendConnector.services.utils={hasLoadedNamespace:clone.hasLoadedNamespace.bind(clone)},clone}toJSON(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}},instance=I18n.createInstance();instance.createInstance=I18n.createInstance;var createInstance=instance.createInstance,dir=instance.dir,init=instance.init,loadResources=instance.loadResources,reloadResources=instance.reloadResources,use=instance.use,changeLanguage=instance.changeLanguage,getFixedT=instance.getFixedT,t=instance.t,exists=instance.exists,setDefaultNamespace=instance.setDefaultNamespace,hasLoadedNamespace=instance.hasLoadedNamespace,loadNamespaces=instance.loadNamespaces,loadLanguages=instance.loadLanguages;var import_obsidian9=require("obsidian");var isObject=obj=>{if(typeof obj=="object"&&obj!==null){if(typeof Object.getPrototypeOf=="function"){let prototype=Object.getPrototypeOf(obj);return prototype===Object.prototype||prototype===null}return Object.prototype.toString.call(obj)==="[object Object]"}return!1},merge=(...objects)=>objects.reduce((result,current)=>{if(Array.isArray(current))throw new TypeError("Arguments provided to ts-deepmerge must be objects, not arrays.");return Object.keys(current).forEach(key=>{["__proto__","constructor","prototype"].includes(key)||(Array.isArray(result[key])&&Array.isArray(current[key])?result[key]=merge.options.mergeArrays?merge.options.uniqueArrayItems?Array.from(new Set(result[key].concat(current[key]))):[...result[key],...current[key]]:current[key]:isObject(result[key])&&isObject(current[key])?result[key]=merge(result[key],current[key]):result[key]=current[key]===void 0?merge.options.allowUndefinedOverrides?current[key]:result[key]:current[key])}),result},{}),defaultOptions={allowUndefinedOverrides:!0,mergeArrays:!0,uniqueArrayItems:!0};merge.options=defaultOptions;merge.withOptions=(options,...objects)=>{merge.options=Object.assign(Object.assign({},defaultOptions),options);let result=merge(...objects);return merge.options=defaultOptions,result};function klona(x){if(typeof x!="object")return x;var k,tmp,str=Object.prototype.toString.call(x);if(str==="[object Object]"){if(x.constructor!==Object&&typeof x.constructor=="function"){tmp=new x.constructor;for(k in x)x.hasOwnProperty(k)&&tmp[k]!==x[k]&&(tmp[k]=klona(x[k]))}else{tmp={};for(k in x)k==="__proto__"?Object.defineProperty(tmp,k,{value:klona(x[k]),configurable:!0,enumerable:!0,writable:!0}):tmp[k]=klona(x[k])}return tmp}if(str==="[object Array]"){for(k=x.length,tmp=Array(k);k--;)tmp[k]=klona(x[k]);return tmp}return str==="[object Set]"?(tmp=new Set,x.forEach(function(val){tmp.add(klona(val))}),tmp):str==="[object Map]"?(tmp=new Map,x.forEach(function(val,key){tmp.set(klona(key),klona(val))}),tmp):str==="[object Date]"?new Date(+x):str==="[object RegExp]"?(tmp=new RegExp(x.source,x.flags),tmp.lastIndex=x.lastIndex,tmp):str==="[object DataView]"?new x.constructor(klona(x.buffer)):str==="[object ArrayBuffer]"?x.slice(0):str.slice(-6)==="Array]"?new x.constructor(x):x}var import_obsidian=require("obsidian");var en_exports={};__export(en_exports,{allFolder:()=>allFolder,commandName:()=>commandName,common:()=>common,create:()=>create,default:()=>en_default,down:()=>down,duplicate:()=>duplicate,editFolder:()=>editFolder,error:()=>error,example:()=>example,log:()=>log,moveUp:()=>moveUp,path:()=>path,quickSwitcher:()=>quickSwitcher,remove:()=>remove,template:()=>template,title:()=>title,up:()=>up,variable:()=>variable});var allFolder={default:{title:"Default template",tooltip:"Set the default template for all folders if they are not registered"},enable:"Enable the plugin all folders",filterAnyFolderCommand:{desc:`Will remove user-defined templates from the "all folders" list. 
If disabled, will display defined templates with their paths rather than their command name.`,title:'Filter the list of the "all folders" command'},listAllModals:"List all folders in quick-switcher, instead to open another modal"},commandName="Command Name",common={date:"Date",example:"Example:",name:"The name",string:"String",submit:"Submit",value:"The value"},create="Create a note:",down="Move down",duplicate="Duplicate",editFolder={add:"Add folder",alreadyExist:{desc:"If you do not open the notes upon creation, it still allows you to open the file if it already exists.",focus:"Focus on the already existing note",title:"Default opening of notes that already exist"},default:"Default template for all folders if they are not registered",fileName:{desc:"The name will be incremented if the name already exists.",title:"Choose how notes will be named."},focus:{desc:"Focus on the new note after creation",title:"Focus"},increments:{desc:"Disabled, will not increment the name if the file already exists and open the already existing note instead.",title:"Increments the name if the file already exists"},opening:{desc:"How note will be opened after creation",dropDown:{current:"Current Tab",newTab:"New Tab",newWindow:"New Window",nothing:"Do not open",split:"Split Pane"},head:"Opening",nothing:"Setting for existing notes",split:{horizontal:"Horizontal",vertical:"Vertical"},title:"Default Opening"},other:{setting:{desc:'Add a button in the file menu to create a note in this folder. Only works if the folder path contains "{{current}}" or use the clicked folder.',title:"File menu"},title:"Other"},template:{dropDown:{folderName:"Folder Name",none:"None"},title:"Choose a template if you want to add something before or after the filename."},templater:{setting:{desc:"Allow to trigger a template from the templater plugin",placeholder:"template",title:"Template path"},title:"Templater settings"},title:"Edit Folder specific settings"},error={date:"Invalid date format, please use a valid format.",duplicate:"{{- name}} already exists.",empty:"{{- name}} cannot be empty",fileName:"Invalid file name, please use a filename if you don't use a template.",invalidExpression:'File name cannot contain any of the following characters: *, ", , /, <, >, :, |, ?',pathNoFound:"The folder {{- path}} doesn't exists.",templateNotFile:"{{- path}} is not a valid file.",templateNotFound:"{{- path}} doesn't exists."},example="Example: path/to/path",log="Creating note in path {{- path}}, with name {{- name}}",moveUp="",path="folder-path",quickSwitcher={anyFolder:"Quick Switcher (any folder)",simple:"Quick Switcher"},remove="Remove Folder",template={desc:"The filename can be empty if you use a template.",dropDown:{date:{desc:"Valid format can be found ",here:"here",url:"https://momentjs.com/docs/#/displaying/format/"}},error:"No files were found in the templater folder.",header:"Template",position:{append:"Append",prepend:"Prepend",title:"Choose where to add the template."},separator:"Separator"},title="Folders",up="Move up",variable={add:"Add new variable",current:{desc:"You can use the {{current}} variable to use the current folder.",warning:"\u26A0\uFE0F You need to have a file already open to use the command."},desc:{explain:"Custom variables will be replaced by their value upon creation.",filename:"You can use custom variables in the folder path. ",insensitive:'Without a regex, the name will be case-sensitive, including the "date" type.',regex:{info:'To use a name with a RegEx, enclose it by "/"',warn:'Regex only work on "string" type.'},warn:{usage:'To use the variable, you need to enclose the name in "{{}}" in the folder path.'}},name:"Name",remove:"Remove variable",title:"Manage custom variables",value:"Value"},en_default={allFolder,commandName,common,create,down,duplicate,editFolder,error,example,log,moveUp,path,quickSwitcher,remove,template,title,up,variable};var fr_exports={};__export(fr_exports,{allFolder:()=>allFolder2,commandName:()=>commandName2,common:()=>common2,create:()=>create2,default:()=>fr_default,down:()=>down2,duplicate:()=>duplicate2,editFolder:()=>editFolder2,error:()=>error2,example:()=>example2,log:()=>log2,moveUp:()=>moveUp2,path:()=>path2,quickSwitcher:()=>quickSwitcher2,remove:()=>remove2,template:()=>template2,title:()=>title2,up:()=>up2,variable:()=>variable2});var allFolder2={default:{title:"Template par d\xE9faut",tooltip:"D\xE9finir le mod\xE8le par d\xE9faut pour tous les dossiers s'ils ne sont pas enregistr\xE9s"},enable:"Activer le plugin pour tous les dossier",filterAnyFolderCommand:{desc:`Supprimera de la liste "tous les dossiers" les templates d\xE9finies par l'utilisateur. Si d\xE9sactiver, affichera les template d\xE9finies avec leur chemins plut\xF4t que leur nom de commande.`,title:'Filtrer la liste de la commande "tous les dossiers"'},listAllModals:"Lister tous les dossiers dans le quick-switcher, au lieu d'ouvrir un autre menu"},commandName2="Nom de la commande",common2={date:"Date",example:"Exemple :",name:"Le nom",string:"Texte",submit:"Valider",value:"La valeur"},create2="Cr\xE9er une note :",down2="D\xE9placer vers le bas",duplicate2="Dupliquer",editFolder2={add:"Ajouter un dossier",alreadyExist:{desc:"Dans le cas o\xF9 vous n'ouvrez pas les notes \xE0 la cr\xE9ation, vous permet tout de m\xEAme d'ouvrir le fichier s'il existe d\xE9j\xE0.",focus:"Focus sur la note d\xE9j\xE0 existante",title:"Ouverture par d\xE9faut des notes qui existent d\xE9j\xE0"},default:"Template par d\xE9faut pour tous les dossiers s'ils ne sont pas enregistr\xE9s",fileName:{desc:"Le nom sera incr\xE9ment\xE9 si le nom existe d\xE9j\xE0.",title:"Choisissez la fa\xE7on dont les notes seront nomm\xE9es."},focus:{desc:"Focus sur la nouvelle note apr\xE8s sa cr\xE9ation",title:"Focus"},increments:{desc:"D\xE9sactiv\xE9, n'incr\xE9mente pas le nom si le fichier existe d\xE9j\xE0 et ouvre la note existante \xE0 la place.",title:"Incr\xE9mentation"},opening:{desc:"Comment la note sera ouverte apr\xE8s sa cr\xE9ation",dropDown:{current:"Onglet courant",newTab:"Nouvel onglet",newWindow:"Nouvelle fen\xEAtre",nothing:"Ne pas ouvrir",split:"Fen\xEAtre divis\xE9e"},head:"Ouverture",nothing:"Param\xE8tre pour les notes d\xE9j\xE0 existantes",split:{horizontal:"Horizontale",vertical:"Verticale"},title:"Ouverture par d\xE9faut"},other:{setting:{desc:'Ajouter un bouton dans le menu fichier pour cr\xE9er une note dans ce dossier. Ne fonctionne que si le chemin du dossier contient "{{current}}" ou est le m\xEAme dossier que celui vis\xE9.',title:'Menu "fichier"'},title:"Autre"},template:{dropDown:{folderName:"Nom du dossier",none:"Aucun"},title:"Choisissez un mod\xE8le si vous voulez ajouter quelque chose avant ou apr\xE8s le nom du fichier."},templater:{setting:{desc:"Permet d'utiliser une template du plugin templater",placeholder:"template",title:"Chemin de la template"},title:"Param\xE8tre de templater"},title:"Modifier les param\xE8tres sp\xE9cifiques au dossier"},error2={date:"Format de date invalide, veuillez utiliser un format valide.",duplicate:"{{- name}} existe d\xE9j\xE0.",empty:"{{- name}} ne peut pas \xEAtre vide",fileName:"Nom de fichier invalide, veuillez utiliser un nom de fichier si vous n'utilisez pas de mod\xE8le.",invalidExpression:'Le nom du fichier ne peut contenir aucun des caract\xE8res suivants : *, ", , /, <, >, :, |, ?',pathNoFound:"Le dossier {{- path}} n'existe pas.",templateNotFile:"{{- path}} n'est pas un fichier valide.",templateNotFound:"{{- path}} n'existe pas."},example2="Exemple: chemin/vers/dossier",log2="Cr\xE9ation de la note dans le dossier {{- path}}, avec le nom {{- name}}.",moveUp2="D\xE9placer en haut",path2="Chemin du dossier",quickSwitcher2={anyFolder:"Quick Switcher (tout dossier)",simple:"Quick Switcher"},remove2="Supprimer le dossier",template2={desc:"Le nom du fichier peut \xEAtre vide si vous utilisez un mod\xE8le.",dropDown:{date:{desc:"Les formats valides peuvent \xEAtre trouv\xE9s ",here:"ici",url:"https://momentjs.com/docs/#/displaying/format/"}},error:"Aucun fichier n'a \xE9t\xE9 trouv\xE9 dans le dossier templater.",header:"Mod\xE8le",position:{append:"Ajouter apr\xE8s",prepend:"Ajouter avant",title:"Choisissez o\xF9 ajouter le mod\xE8le."},separator:"S\xE9parateur"},title2="Dossiers",up2="D\xE9placer vers le haut",variable2={add:"Ajouter une nouvelle variable",current:{desc:"Vous pouvez utiliser la variable {{current}} pour utiliser le dossier actuel.",warning:"\u26A0\uFE0F Vous avez besoin d'avoir un fichier d\xE9j\xE0 ouvert pour utiliser la commande."},desc:{explain:"Les variables personnalis\xE9es seront remplac\xE9es par leurs valeurs lors de la cr\xE9ation.",filename:"Vous pouvez utiliser des variables personnalis\xE9es dans le chemin du fichier. ",insensitive:'Sans Regex, le nom sera sensible \xE0 la casse, y compris le type "date".',regex:{info:`Pour utiliser un nom avec un RegEx, il faut l'entourer de "/"`,warn:'Les regex ne fonctionne que sur le type "texte".'},warn:{usage:'Pour utiliser la variable, vous devez entourer son nom de "{{}}" dans le chemin du fichier.'}},name:"Nom",remove:"Supprimer la variable",title:"G\xE9rer les variables personnalis\xE9es",value:"Valeur"},fr_default={allFolder:allFolder2,commandName:commandName2,common:common2,create:create2,down:down2,duplicate:duplicate2,editFolder:editFolder2,error:error2,example:example2,log:log2,moveUp:moveUp2,path:path2,quickSwitcher:quickSwitcher2,remove:remove2,template:template2,title:title2,up:up2,variable:variable2};var ressources={en:{translation:en_exports},fr:{translation:fr_exports}},translationLanguage=Object.keys(ressources).find(i=>i==import_obsidian.moment.locale())?import_obsidian.moment.locale():"en";var DEFAULT_SETTINGS={folder:[],customVariables:[],timeOutForInlineTitle:50},DEFAULT_FOLDER_SETTINGS={path:"",commandName:"",template:{type:"none",format:"",position:"append",separator:"",increment:!0},fileName:"Untitled",opening:"newTab",focused:!0,splitDefault:"horizontal",alreadyExistOpening:{opening:"newTab",splitDefault:"horizontal",focused:!0},fileMenu:!1};var import_obsidian4=require("obsidian");var import_obsidian3=require("obsidian");var import_obsidian2=require("obsidian");function validateDate(date){return(0,import_obsidian2.moment)((0,import_obsidian2.moment)().format(date),date,!0).isValid()}function isTemplaterNeeded(app,settings){return app.plugins.enabledPlugins.has("templater-obsidian")&&settings.templater}function generateFileName(folder,app){let defaultName=folder.fileName;defaultName=defaultName.replace(".md","");let template3=folder.template,typeName=template3.type,generatedName=null;for(typeName==="date"?(template3.format.trim().length===0&&(template3.format="YYYY-MM-DD"),generatedName=(0,import_obsidian2.moment)().format(template3.format)):typeName==="folderName"&&(generatedName=(0,import_obsidian2.normalizePath)(folder.path).split("/").pop()),template3.position==="prepend"&&generatedName?defaultName=generatedName+template3.separator+defaultName:template3.position==="append"&&generatedName&&(defaultName=defaultName+template3.separator+generatedName);app.vault.getAbstractFileByPath((0,import_obsidian2.normalizePath)(`${folder.path}/${defaultName}.md`))&&template3.increment;){let increment=defaultName.match(/ \d+$/),newIncrement=increment?parseInt(increment[0])+1:1;defaultName=`${defaultName.replace(/ \d+$/,"")} ${newIncrement}`}return`${defaultName}.md`}function replaceVariables(filePath,customVariables){let hasBeenReplaced=[];for(let variable3 of customVariables)if(filePath.match(`{{${variable3.name}}}`))variable3.type==="string"?filePath=filePath.replace(`{{${variable3.name}}}`,variable3.value):filePath=filePath.replace(`{{${variable3.name}}}`,(0,import_obsidian2.moment)().format(variable3.value)),hasBeenReplaced.push(!0);else if(variable3.name.match(/^\/.+\/[gimy]*$/)){let regex=new RegExp(variable3.name.replace(/^\/(.+)\/[gimy]*$/,"{{$1}}"),variable3.name.replace(/^\/.+\/([gimy]*)$/,"$1"));filePath.match(regex)&&(filePath=filePath.replace(regex,variable3.value),hasBeenReplaced.push(!0))}return{path:filePath,hasBeenReplaced:hasBeenReplaced.length>0}}function generateFileNameWithCurrent(newFolder,currentFile,plugin){let{settings,app}=plugin,{path:path3,hasBeenReplaced}=replaceVariables(newFolder.path,settings.customVariables),parent=currentFile.parent?currentFile.parent.path:"/";currentFile instanceof import_obsidian2.TFolder&&(parent=currentFile.path);let currentFolder=klona(newFolder);currentFolder.path=(0,import_obsidian2.normalizePath)(path3.replace("{{current}}",`${parent}/`));let folderPath=(0,import_obsidian2.normalizePath)(currentFolder.path),defaultName=generateFileName(currentFolder,app);return{folderPath,defaultName,hasBeenReplaced,currentFolder}}function scrollToPosition(app,parts){let cache=app.metadataCache.getCache(parts.path),view=app.workspace.getActiveViewOfType(import_obsidian3.MarkdownView);if(!(!view||!cache)){if(parts.heading){let heading=cache.headings?.find(heading2=>heading2.heading===parts.heading);heading&&view.editor.setCursor(heading.position.start.line)}else if(parts.block){let block=cache.blocks?.[parts.block];block&&view.editor.setCursor(block.position.start.line)}}}function getLinkParts(path3,app){let blockMatch=path3.match(/\^(.*)$/),block=blockMatch?blockMatch[1]:void 0;path3=path3.replace(/(\^.*)$/,"");let headingMatch=path3.match(/#(.*)$/),heading=headingMatch?headingMatch[1]:void 0;return path3=path3.replace(/(#.*)$/,""),{path:app.metadataCache.getFirstLinkpathDest((0,import_obsidian3.getLinkpath)(path3),app.workspace.getActiveFile()?.path??"")?.path??path3,heading,block}}function getOpening(app,currentFolder,param=currentFolder.opening,split=currentFolder.splitDefault){switch(param){case"split":return app.workspace.getLeaf("split",split);case"newWindow":return app.workspace.getLeaf("window");case"newTab":return app.workspace.getLeaf(!0);case"nothing":return;default:return app.workspace.getLeaf(!1)}}function getLeafWithNote(app,file){let openedLeaf;return app.workspace.iterateAllLeaves(leaf=>{leaf.view.file?.path===file.path&&(openedLeaf=leaf)}),openedLeaf}async function createNoteInFolder(newFolder,plugin,quickSwitcher3=!1){let{settings,app}=plugin,{path:path3,hasBeenReplaced}=replaceVariables(newFolder.path,settings.customVariables),currentFolder=klona(newFolder);currentFolder.path=(0,import_obsidian3.normalizePath)(path3);let defaultName=generateFileName(currentFolder,app);if(!app.vault.getAbstractFileByPath(currentFolder.path)){if(hasBeenReplaced)await app.vault.createFolder(currentFolder.path);else if(!quickSwitcher3){new import_obsidian3.Notice(instance.t("error.pathNoFound",{path:newFolder.path})),settings.folder=settings.folder.filter(folder=>folder.commandName!==currentFolder.commandName),await plugin.saveSettings(),await plugin.addNewCommands(currentFolder.commandName,void 0);return}}console.log(instance.t("log",{path:currentFolder.path,name:defaultName}));let createdFilePath=(0,import_obsidian3.normalizePath)(`${currentFolder.path}/${defaultName}`),file=app.vault.getAbstractFileByPath(createdFilePath);if(file instanceof import_obsidian3.TFile){if(currentFolder.opening!=="nothing"){let leaf=getLeafWithNote(app,file);leaf?(leaf.openFile(file,{active:currentFolder.focused}),scrollToPosition(app,getLinkParts(defaultName,app))):(leaf=getOpening(app,currentFolder,currentFolder.opening,currentFolder.splitDefault),await leaf.openFile(file,{active:currentFolder.focused}))}else if(currentFolder.alreadyExistOpening.opening!=="nothing"){let leaf=getLeafWithNote(app,file);leaf?(leaf.openFile(file,{active:currentFolder.alreadyExistOpening.focused}),scrollToPosition(app,getLinkParts(defaultName,app))):(leaf=getOpening(app,currentFolder,currentFolder.alreadyExistOpening.opening,currentFolder.alreadyExistOpening.splitDefault),leaf&&await leaf.openFile(file,{active:currentFolder.alreadyExistOpening.focused}))}}else if(!file){let leaf=getOpening(app,currentFolder);if(leaf){let newFile=await app.vault.create(createdFilePath,"");await leaf.openFile(newFile,{active:currentFolder.focused}),await plugin.triggerTemplater(newFile,currentFolder),await focusInlineTitle(leaf,app)}else if(isTemplaterNeeded(app,currentFolder)){let templateFile=this.app.vault.getAbstractFileByPath(currentFolder.templater);if(!templateFile||!(templateFile instanceof import_obsidian3.TFile)){new import_obsidian3.Notice(instance.t("error.templateNotFound",{path:currentFolder.templater}));return}let folder=app.vault.getAbstractFileByPath((0,import_obsidian3.normalizePath)(currentFolder.path));app.plugins.plugins["templater-obsidian"].templater.create_new_note_from_template(templateFile,folder,defaultName,!1)}else await app.vault.create(createdFilePath,"")}}function createFolderInCurrent(newFolder,currentFile,plugin){let{settings,app}=plugin,{folderPath,defaultName,hasBeenReplaced,currentFolder}=generateFileNameWithCurrent(newFolder,currentFile,plugin);if(!app.vault.getAbstractFileByPath(folderPath))if(hasBeenReplaced)app.vault.createFolder(currentFolder.path);else{new import_obsidian3.Notice(instance.t("error.pathNoFound",{path:currentFolder.path}));return}console.log(instance.t("log",{path:currentFolder.path,name:defaultName}));let leaf=getOpening(app,currentFolder),createdFilePath=(0,import_obsidian3.normalizePath)(`${currentFolder.path}/${defaultName}`),file=app.vault.getAbstractFileByPath(createdFilePath);if(file instanceof import_obsidian3.TFile){if(currentFolder.opening!=="nothing"){let leaf2=getLeafWithNote(app,file);leaf2?(leaf2.openFile(file,{active:currentFolder.focused}),scrollToPosition(app,getLinkParts(defaultName,app))):(leaf2=getOpening(app,currentFolder,currentFolder.opening,currentFolder.splitDefault),leaf2.openFile(file,{active:currentFolder.focused}))}else if(currentFolder.alreadyExistOpening.opening!=="nothing"){let leaf2=getLeafWithNote(app,file);leaf2?(leaf2.openFile(file,{active:currentFolder.alreadyExistOpening.focused}),scrollToPosition(app,getLinkParts(defaultName,app))):(leaf2=getOpening(app,currentFolder,currentFolder.alreadyExistOpening.opening,currentFolder.alreadyExistOpening.splitDefault),leaf2&&leaf2.openFile(file,{active:currentFolder.alreadyExistOpening.focused}))}}else if(!file)if(leaf){leaf=leaf;let timeout=50;settings.timeOutForInlineTitle&&(settings.timeOutForInlineTitle instanceof Object?timeout=settings.timeOutForInlineTitle[import_obsidian3.Platform.isMobile?"mobile":"desktop"]:typeof settings.timeOutForInlineTitle=="number"&&(timeout=settings.timeOutForInlineTitle)),app.vault.create(createdFilePath,"").then(file2=>{leaf?.openFile(file2,{active:currentFolder.focused}),plugin.triggerTemplater(file2,currentFolder)}),new Promise(resolve=>{setTimeout(()=>{focusInlineTitle(leaf,app),resolve(void 0)},timeout)})}else if(isTemplaterNeeded(app,currentFolder)){let templateFile=app.vault.getAbstractFileByPath(currentFolder.templater??"");if(!templateFile||!(templateFile instanceof import_obsidian3.TFile)){new import_obsidian3.Notice(instance.t("error.templateNotFound",{path:currentFolder.templater}));return}let folder=app.vault.getAbstractFileByPath((0,import_obsidian3.normalizePath)(currentFolder.path));app.plugins.plugins["templater-obsidian"].templater.create_new_note_from_template(templateFile,folder,defaultName,!1)}else app.vault.create(createdFilePath,"")}async function focusInlineTitle(leaf,app){if(!leaf)return;let titleContainerEl=leaf.view.containerEl.querySelector("div.inline-title");if(!titleContainerEl)return;let innerTitle=titleContainerEl;if(app.plugins.enabledPlugins.has("obsidian-front-matter-title-plugin")){let innerTitleFMT=leaf.view.containerEl.querySelector("div.inline-title[ofmt-original-id]");innerTitleFMT?.hasAttribute("hidden")&&(titleContainerEl.setAttribute("hidden",""),innerTitleFMT.removeAttribute("hidden"),innerTitle=innerTitleFMT)}innerTitle.scrollIntoView(),await innerTitle.focus(),window.getSelection()?.selectAllChildren(innerTitle)}function specialSortCurrentRoot(template3){return template3.sort((a,b)=>a.commandName==="/"?-1:b.commandName==="/"?1:a.commandName==="{{current}}"?-1:b.commandName==="{{current}}"?1:a.commandName.localeCompare(b.commandName))}var ChooseFolder=class _ChooseFolder extends import_obsidian4.FuzzySuggestModal{currentFile;plugin;constructor(app,plugin,currentFile){super(app),this.plugin=plugin,this.currentFile=currentFile}getItems(){let allFoldersSettings=klona(this.plugin.settings.folder);if(this.plugin.settings.enableAllFolder)if(!this.plugin.settings.listAllFolderInModals)allFoldersSettings.push({...DEFAULT_FOLDER_SETTINGS,path:"",commandName:"Other folders..."});else{allFoldersSettings.push({...DEFAULT_FOLDER_SETTINGS,path:"",commandName:"-------"});let allFolders=this.app.vault.getAllLoadedFiles().filter(file=>file instanceof import_obsidian4.TFolder);allFolders.push(this.app.vault.getRoot());let toPush=allFolders.map(folder=>({...this.plugin.settings.defaultTemplate??DEFAULT_FOLDER_SETTINGS,path:folder.path,commandName:folder.path})).filter(folder=>!this.plugin.settings.folder.some(folderSettings=>folderSettings.path===folder.path)).sort((a,b)=>a.path.localeCompare(b.path));allFoldersSettings.push(...toPush)}return this.currentFile?allFoldersSettings:allFoldersSettings.filter(folder=>!folder.path.contains("{{current}}"))}getItemText(item){if(this.plugin.settings.listAllFolderInModals&&item.commandName==="-------"||item.path==="-------"){let promptResult=this.resultContainerEl.querySelectorAll(".suggestion-item"),lastElement=promptResult[promptResult.length-1];lastElement&&(item.commandName="",lastElement.classList.add("hr-item"),lastElement.createEl("hr"),item.path="-------")}return item.commandName}async onChooseItem(item,_evt){if(this.plugin.settings.enableAllFolder&&item.commandName==="Other folders..."&&item.path===""){new ChooseInAllFolder(this.app,this.plugin,!0,this.currentFile).open();return}else this.currentFile&&item.path.contains("{{current}}")&&item.commandName!==""&&item.path!==""?createFolderInCurrent(item,this.currentFile,this.plugin):item.commandName!==""&&item.path!==""?await createNoteInFolder(item,this.plugin):this.plugin.settings.listAllFolderInModals&&new _ChooseFolder(this.app,this.plugin,this.currentFile).open()}},ChooseInAllFolder=class extends import_obsidian4.FuzzySuggestModal{plugin;filter;currentFile;constructor(app,plugin,filter=!0,currentFile){super(app),this.filter=filter,this.plugin=plugin,this.currentFile=currentFile}getItems(){let allFolders=this.app.vault.getAllLoadedFiles().filter(file=>file instanceof import_obsidian4.TFolder);allFolders.push(this.app.vault.getRoot());let templatedFolders=allFolders.map(folder=>({...this.plugin.settings.defaultTemplate??DEFAULT_FOLDER_SETTINGS,path:folder.path,commandName:folder.path})).filter(folder=>!this.plugin.settings.folder.some(folderSettings=>folderSettings.path===folder.path));if(this.currentFile){let currentFolder=this.currentFile.parent?.path??"/";templatedFolders=templatedFolders.filter(folder=>folder.path!==currentFolder);let userDefinedFolder=this.plugin.settings.folder.find(folder=>folder.path.replace("{{current}}",currentFolder)===currentFolder);!this.filter&&userDefinedFolder?templatedFolders.push({...userDefinedFolder,commandName:"{{current}}"}):userDefinedFolder||templatedFolders.push({...DEFAULT_FOLDER_SETTINGS,path:currentFolder,commandName:"{{current}}"})}if(this.filter)return specialSortCurrentRoot(templatedFolders);let allFoldersSettings=klona(this.plugin.settings.folder);return allFoldersSettings=allFoldersSettings.filter(folder=>!folder.path.contains("{{current}}")),templatedFolders=templatedFolders.concat(allFoldersSettings.map(folder=>({...folder,commandName:folder.path,path:folder.path}))),specialSortCurrentRoot(templatedFolders)}getItemText(item){return item.commandName}async onChooseItem(item,_evt){this.currentFile&&item.path.contains("{{current}}")?createFolderInCurrent(item,this.currentFile,this.plugin):await createNoteInFolder(item,this.plugin)}};var import_obsidian8=require("obsidian");var import_obsidian6=require("obsidian");var import_obsidian5=require("obsidian"),FolderSuggester=class extends import_obsidian5.AbstractInputSuggest{constructor(inputEl,app,onSubmit){super(app,inputEl);this.inputEl=inputEl;this.onSubmit=onSubmit}renderSuggestion(value,el){el.setText(value)}getSuggestions(query){let sugg=this.app.vault.getAllFolders().filter(folder=>folder.path.toLowerCase().contains(query.toLowerCase())).map(folder=>folder.path);return sugg.length===0?[query]:sugg}selectSuggestion(value,_evt){this.inputEl.value=value,this.onSubmit(value),this.inputEl.focus(),this.inputEl.trigger("input"),this.close()}},FileSuggester=class extends import_obsidian5.AbstractInputSuggest{constructor(inputEl,app,onSubmit){super(app,inputEl);this.inputEl=inputEl;this.onSubmit=onSubmit}renderSuggestion(value,el){el.setText(value.path)}recursiveChildren(folder){let files=[];return folder.children.forEach(file=>{file instanceof import_obsidian5.TFile?files.push(file):file instanceof import_obsidian5.TFolder&&files.push(...this.recursiveChildren(file))}),files}errorMessages=instance.t("template.error");getSuggestions(query){let templaterPlugin=this.app.plugins.getPlugin("templater-obsidian");if(!templaterPlugin)return new import_obsidian5.Notice(this.errorMessages),[];let templaterFolder=this.app.vault.getAbstractFileByPath(templaterPlugin.settings.templates_folder);return!templaterFolder||!(templaterFolder instanceof import_obsidian5.TFolder)?(new import_obsidian5.Notice(this.errorMessages),[]):this.recursiveChildren(templaterFolder).filter(file=>file instanceof import_obsidian5.TFile&&file.extension==="md"&&file.path.toLowerCase().contains(query.toLowerCase()))}selectSuggestion(value,_evt){this.onSubmit(value),this.inputEl.value=value.path,this.inputEl.focus(),this.inputEl.trigger("input"),this.close()}};var AddFolderModal=class extends import_obsidian6.Modal{result;defaultTemp;onSubmit;constructor(app,actualFolder,defaultTemp=!1,onSubmit){super(app),this.result=actualFolder,this.onSubmit=onSubmit,this.defaultTemp=defaultTemp}settingsTemplateDate(contentEl){let desc=document.createDocumentFragment(),title3=instance.t("common.date");desc.createEl("span",void 0,span=>{span.innerText=instance.t("template.dropDown.date.desc"),span.createEl("a",void 0,a=>{a.innerText=instance.t("template.dropDown.date.here"),a.href=instance.t("template.dropDown.date.url")})});let paramName=new import_obsidian6.Setting(contentEl).setName(title3).setDesc(desc).addText(cb=>{cb.setPlaceholder("YYYY-MM-DD").setValue(this.result.template.format).onChange(value=>{this.result.template.format=value,paramName?.controlEl.classList.remove("is-error")})});return paramName}settingTemplater(contentEl){return this.app.plugins.getPlugin("templater-obsidian")?(contentEl.createEl("h2",{text:instance.t("editFolder.templater.title")}),new import_obsidian6.Setting(contentEl).setName(instance.t("editFolder.templater.setting.title")).setDesc(instance.t("editFolder.templater.setting.desc")).addSearch(cb=>{cb.setValue(this.result.templater??""),new FileSuggester(cb.inputEl,this.app,file=>{this.result.templater=file.path}),cb.setPlaceholder(instance.t("editFolder.templater.setting.placeholder"))})):null}settingTemplate(contentEl,typeName,fileNameSetting){let paramName=null;return typeName!=="none"&&(fileNameSetting.setClass("create-note-in-folder"),fileNameSetting.setClass("edit"),fileNameSetting.setClass("is-facultative"),fileNameSetting.setDesc(instance.t("template.desc")),contentEl.createEl("h3",{text:instance.t("template.header")}),"date"===this.result.template.type?paramName=this.settingsTemplateDate(contentEl):"folderName"===this.result.template.type&&(this.result.template.format=this.result.path.split("/").pop()),new import_obsidian6.Setting(contentEl).setName(instance.t("template.position.title")).addDropdown(cb=>{cb.addOption("prepend",instance.t("template.position.prepend")).addOption("append",instance.t("template.position.append")).setValue(this.result.template.position).onChange(value=>{this.result.template.position=value})}).addText(cb=>{cb.setPlaceholder(instance.t("template.separator")),cb.setValue(this.result.template.separator),cb.onChange(value=>{this.result.template.separator=value})})),paramName}settingSplit(settingComp,split,type="default"){let value=type==="default"?this.result.splitDefault:this.result.alreadyExistOpening.splitDefault;split==="split"&&settingComp.addDropdown(cb=>cb.addOption("horizontal",instance.t("editFolder.opening.split.horizontal")).addOption("vertical",instance.t("editFolder.opening.split.vertical")).setValue(value).onChange(async value2=>{type==="default"?this.result.splitDefault=value2:this.result.alreadyExistOpening.splitDefault=value2}))}onOpen(){let{contentEl}=this;contentEl.empty(),contentEl.addClasses(["create-note-in-folder","edit"]),this.defaultTemp?contentEl.createEl("h2",{text:instance.t("editFolder.default")}):contentEl.createEl("h2",{text:instance.t("editFolder.title")});let fileNameSettings=new import_obsidian6.Setting(contentEl).setName(instance.t("editFolder.fileName.title")).setDesc(instance.t("editFolder.fileName.desc")).addText(cb=>{cb.setValue(this.result.fileName).onChange(value=>{this.result.fileName=value.replace(".md","")})});new import_obsidian6.Setting(contentEl).setName(instance.t("editFolder.increments.title")).setDesc(instance.t("editFolder.increments.desc")).addToggle(cb=>cb.setValue(this.result.template.increment??!0).onChange(async value=>{this.result.template.increment=value,this.onOpen()})),new import_obsidian6.Setting(contentEl).setName(instance.t("editFolder.template.title")).addDropdown(cb=>{cb.addOption("none",instance.t("editFolder.template.dropDown.none")).addOption("date",instance.t("common.date")).addOption("folderName",instance.t("editFolder.template.dropDown.folderName")).setValue(this.result.template.type).onChange(value=>{this.result.template.type=value,this.onOpen()})});let paramName=this.settingTemplate(contentEl,this.result.template.type,fileNameSettings);contentEl.createEl("h2",{text:instance.t("editFolder.opening.head")});let opening=new import_obsidian6.Setting(contentEl).setName(instance.t("editFolder.opening.title")).setDesc(instance.t("editFolder.opening.desc")).addDropdown(cb=>{cb.addOption("newTab",instance.t("editFolder.opening.dropDown.newTab")).addOption("current",instance.t("editFolder.opening.dropDown.current")).addOption("newWindow",instance.t("editFolder.opening.dropDown.newWindow")).addOption("split",instance.t("editFolder.opening.dropDown.split")).addOption("nothing",instance.t("editFolder.opening.dropDown.nothing")).setValue(this.result.opening).onChange(value=>{this.result.opening=value,this.onOpen()})});if(this.settingSplit(opening,this.result.opening),this.result.opening!=="nothing")new import_obsidian6.Setting(contentEl).setName(instance.t("editFolder.focus.title")).setDesc(instance.t("editFolder.focus.desc")).addToggle(cb=>cb.setValue(this.result.focused).onChange(async value=>{this.result.focused=value}));else if(!this.result.template.increment&&this.result.opening==="nothing"){contentEl.createEl("h3",{text:instance.t("editFolder.opening.nothing")}),contentEl.createEl("p",{text:instance.t("editFolder.alreadyExist.desc")});let alreadyExist=this.result.alreadyExistOpening,dp=new import_obsidian6.Setting(contentEl).setName(instance.t("editFolder.alreadyExist.title")).addDropdown(cb=>{cb.addOption("newTab",instance.t("editFolder.opening.dropDown.newTab")).addOption("current",instance.t("editFolder.opening.dropDown.current")).addOption("newWindow",instance.t("editFolder.opening.dropDown.newWindow")).addOption("split",instance.t("editFolder.opening.dropDown.split")).setValue(this.result.alreadyExistOpening.opening).onChange(value=>{this.result.alreadyExistOpening.opening=value,this.onOpen()})});this.settingSplit(dp,alreadyExist.opening,"exists"),alreadyExist.opening!=="nothing"&&new import_obsidian6.Setting(contentEl).setName(instance.t("editFolder.focus.title")).setDesc(instance.t("editFolder.alreadyExist.focus")).addToggle(cb=>cb.setValue(alreadyExist.focused).onChange(async value=>{alreadyExist.focused=value}))}this.settingTemplater(contentEl),this.contentEl.createEl("h2",{text:instance.t("editFolder.other.title")}),new import_obsidian6.Setting(contentEl).setName(instance.t("editFolder.other.setting.title")).setDesc(instance.t("editFolder.other.setting.desc")).addToggle(cb=>cb.setValue(this.result.fileMenu).onChange(async value=>{this.result.fileMenu=value})),new import_obsidian6.Setting(contentEl).addButton(cb=>cb.setButtonText(instance.t("common.submit")).onClick(()=>{this.result.template.type==="none"&&this.result.fileName.trim().length===0?(new import_obsidian6.Notice(instance.t("error.fileName")),fileNameSettings.controlEl.classList.add("is-error")):this.result.template.type==="date"&&!validateDate(this.result.template.format)?(new import_obsidian6.Notice(instance.t("error.date")),paramName?.controlEl.classList.add("is-error")):this.result.fileName.match(/[*"/\\<>:|?]+/)?(new import_obsidian6.Notice(instance.t("error.invalidExpression")),fileNameSettings.controlEl.classList.add("is-error")):(this.onSubmit(this.result),this.close())}))}onClose(){let{contentEl}=this;contentEl.empty()}};var import_obsidian7=require("obsidian");var ManageCustomVariables=class extends import_obsidian7.Modal{result;onSubmit;constructor(app,actualVariables,onSubmit){super(app),this.result=actualVariables,this.onSubmit=onSubmit}onOpen(){let{contentEl}=this;contentEl.empty(),contentEl.addClasses(["create-note-in-folder","manage"]),contentEl.createEl("h2",{text:instance.t("variable.title")}),contentEl.createEl("p",{text:instance.t("variable.desc.filename")}).createEl("ul",void 0,ul=>{ul.createEl("li",{text:instance.t("variable.desc.explain")});let pReg=ul.createEl("li",{text:instance.t("variable.desc.regex.info")}).createEl("p",{text:`${instance.t("common.example")} `});pReg.createEl("code",{text:"/\\d+-\\d+/gi"}),pReg.addClass("list"),ul.createEl("li",{text:instance.t("variable.desc.regex.warn")}),ul.createEl("li",{text:instance.t("variable.desc.insensitive")})}),contentEl.createEl("p",void 0,p2=>{p2.createEl("p",{text:`\u26A0\uFE0F ${instance.t("variable.desc.warn.usage")}`,cls:"callout-title"}),p2.createEl("p",void 0,pWarn=>{pWarn.createEl("span",{text:instance.t("common.example")}),pWarn.createEl("span",{text:" ",cls:"code"}),pWarn.createEl("code",{text:"MyFolder/{{month}}/{{date}}.md",cls:"code"})})}).addClass("is-warning"),new import_obsidian7.Setting(contentEl).addButton(cb=>cb.setButtonText(instance.t("variable.add")).onClick(()=>{this.result.push({name:"",value:"",type:"string"}),this.onOpen()}));for(let custom of this.result)new import_obsidian7.Setting(contentEl).setClass("no-display").setClass("custom-variables").addText(cb=>{cb.setPlaceholder(instance.t("variable.name")).setValue(custom.name).onChange(value=>{custom.name=value})}).addDropdown(cb=>{cb.addOption("string",instance.t("common.string")).addOption("date",instance.t("common.date")).setValue(custom.type).onChange(value=>{custom.type=value})}).addText(cb=>{cb.setPlaceholder(instance.t("variable.value")).setValue(custom.value).onChange(value=>{custom.value=value})}).addExtraButton(cb=>{cb.setIcon("cross").setTooltip(instance.t("variable.remove")).onClick(()=>{this.result.splice(this.result.indexOf(custom),1),this.onOpen()})});new import_obsidian7.Setting(contentEl).addButton(cb=>cb.setButtonText(instance.t("common.submit")).onClick(()=>{this.addErrorClass()}))}onClose(){let{contentEl}=this;contentEl.empty()}validateEntry(){let wrongResultIndex=[];if(this.result.some(custom=>custom.name.trim().length===0)){let translation=instance.t("common.name");new import_obsidian7.Notice(instance.t("error.empty",{name:translation})),wrongResultIndex.push({type:"name",index:this.result.findIndex(custom=>custom.name.trim().length===0)})}if(this.result.some(custom=>custom.value.trim().length===0)){let translation=instance.t("common.value");new import_obsidian7.Notice(instance.t("error.empty",{name:translation})),wrongResultIndex.push({type:"value",index:this.result.findIndex(custom=>custom.value.trim().length===0)})}this.result.some(custom=>custom.type==="date"&&!validateDate(custom.value))&&(new import_obsidian7.Notice(instance.t("error.date")),wrongResultIndex.push({type:"value",index:this.result.findIndex(custom=>custom.type==="date"&&!validateDate(custom.value))}));let duplicate3=this.result.map(custom=>custom.name).filter((value,index,self)=>self.indexOf(value)!==index);if(duplicate3.length!==0){let duplicated=duplicate3.map(name=>{let index=this.result.findIndex(custom=>custom.name===name);return this.result[index]}).map(custom=>custom.name).join(", ");new import_obsidian7.Notice(instance.t("error.duplicate",{name:duplicated}));for(let name of duplicate3)wrongResultIndex.push({type:"name",index:this.result.findIndex(custom=>custom.name===name)})}return wrongResultIndex}addErrorClass(){let wrongResultIndex=this.validateEntry();wrongResultIndex.length===0&&(this.onOpen(),this.onSubmit(this.result),this.close()),this.onOpen();for(let index of wrongResultIndex){let resIndex=index.index<0?0:index.index,setting=this.contentEl.getElementsByClassName("manage-custom-variables")[resIndex],type=index.type;type==="name"&&setting.getElementsByTagName("input")[0].classList.add("is-error","edit","create-note-in-folder"),type==="value"&&setting.getElementsByTagName("input")[1].classList.add("is-error","edit","create-note-in-folder")}}};var NoteInFolderSettingsTab=class extends import_obsidian8.PluginSettingTab{plugin;constructor(app,plugin){super(app,plugin),this.plugin=plugin}display(){let{containerEl}=this;containerEl.empty(),containerEl.addClasses(["create-note-in-folder","settingsTab"]),containerEl.createEl("p",{text:instance.t("variable.current.desc")}),containerEl.createEl("p",{text:instance.t("variable.current.warning"),cls:"is-warning"}),new import_obsidian8.Setting(containerEl).setName(instance.t("allFolder.enable")).addToggle(cb=>cb.setValue(this.plugin.settings.enableAllFolder??!1).onChange(async value=>{this.plugin.settings.enableAllFolder=value,await this.plugin.saveSettings(),this.plugin.quickSwitcherAnyFolder(),this.display()})).addButton(cb=>cb.setButtonText(instance.t("allFolder.default.title")).setTooltip(instance.t("allFolder.default.tooltip")).onClick(()=>{let defaultTemplate=klona(this.plugin.settings.defaultTemplate??DEFAULT_FOLDER_SETTINGS);new AddFolderModal(this.app,defaultTemplate,!0,result=>{this.plugin.settings.defaultTemplate=result,this.plugin.saveSettings()}).open()})),this.plugin.settings.enableAllFolder&&(new import_obsidian8.Setting(containerEl).setName(instance.t("allFolder.listAllModals")).addToggle(cb=>cb.setValue(this.plugin.settings.listAllFolderInModals??!1).onChange(async value=>{this.plugin.settings.listAllFolderInModals=value,await this.plugin.saveSettings()})),new import_obsidian8.Setting(containerEl).setName(instance.t("allFolder.filterAnyFolderCommand.title")).setDesc(instance.t("allFolder.filterAnyFolderCommand.desc")).addToggle(cb=>cb.setValue(this.plugin.settings.filterAnyFolderCommand??!1).onChange(async value=>{this.plugin.settings.filterAnyFolderCommand=value,await this.plugin.saveSettings()}))),new import_obsidian8.Setting(containerEl).setClass("no-display").addButton(cb=>cb.setButtonText(instance.t("variable.title")).onClick(()=>{let customVariable=klona(this.plugin.settings.customVariables??[]);new ManageCustomVariables(this.app,customVariable,async result=>{this.plugin.settings.customVariables=result,await this.plugin.saveSettings()}).open()})),new import_obsidian8.Setting(containerEl).setHeading().setName(instance.t("title"));for(let folder of this.plugin.settings.folder){let sett=new import_obsidian8.Setting(containerEl).setClass("no-display").addButton(cb=>cb.setIcon("copy").setTooltip(instance.t("duplicate")).onClick(async()=>{let defaultSettings=klona(folder);defaultSettings=this.duplicateFolder(defaultSettings),this.plugin.settings.folder.push(defaultSettings),await this.plugin.saveSettings(),this.display()})).addButton(cb=>cb.setIcon("pencil").setTooltip(instance.t("editFolder.title")).onClick(async()=>{let folderSettings=klona(folder),index=this.plugin.settings.folder.indexOf(folder);new AddFolderModal(this.app,folderSettings,!1,async result=>{folder=result,this.plugin.settings.folder[index]=result,await this.plugin.addNewCommands(this.plugin.settings.folder[index].commandName,this.plugin.settings.folder[index],!0),await this.plugin.removeCommands(),result.fileMenu?result.template.increment?result.template.increment&&this.plugin.removeDisabledMenu(result,"increment"):this.plugin.removeDisabledMenu(result,"create"):this.plugin.removeDisabledMenu(result,"all"),await this.plugin.saveSettings()}).open()})).addText(cb=>{cb.setPlaceholder(instance.t("commandName")).setValue(folder.commandName??folder.path).onChange(async value=>{let oldCommandName=folder.commandName,oldCommand=klona(folder);folder.commandName=value,await this.plugin.addNewCommands(oldCommandName,folder,!0),await this.plugin.removeCommands(),this.plugin.removeDisabledMenu(oldCommand,"all"),await this.plugin.saveSettings()}),this.addTooltip(instance.t("commandName"),cb.inputEl)}).addSearch(async cb=>{cb.setPlaceholder(instance.t("example")),cb.setValue(folder.path),new FolderSuggester(cb.inputEl,this.app,async result=>{folder.path=result;let oldCommandName=folder.commandName&&folder.commandName.length>0?folder.commandName:result;folder.commandName=oldCommandName,await this.plugin.removeCommands(),await this.plugin.addNewCommands(oldCommandName,folder,!0)}),await this.plugin.saveSettings(),this.addTooltip(instance.t("path"),cb.inputEl)}),disableUpArrow=this.plugin.settings.folder.indexOf(folder)===0;sett.addExtraButton(cb=>{disableUpArrow||cb.setTooltip(instance.t("up")),cb.setDisabled(disableUpArrow).setIcon("arrow-up").setTooltip(instance.t("up")).onClick(async()=>{let index=this.plugin.settings.folder.indexOf(folder);this.plugin.settings.folder.splice(index,1),this.plugin.settings.folder.splice(index-1,0,folder),await this.plugin.saveSettings(),this.display()})});let disableDownArrow=this.plugin.settings.folder.indexOf(folder)===this.plugin.settings.folder.length-1;sett.addExtraButton(cb=>{disableDownArrow||cb.setTooltip(instance.t("down")),cb.setDisabled(disableDownArrow).setIcon("arrow-down").onClick(async()=>{let index=this.plugin.settings.folder.indexOf(folder);this.plugin.settings.folder.splice(index,1),this.plugin.settings.folder.splice(index+1,0,folder),await this.plugin.saveSettings(),this.display()})}),sett.addButton(cb=>cb.setIcon("cross").setTooltip(instance.t("remove")).onClick(async()=>{this.plugin.settings.folder.splice(this.plugin.settings.folder.indexOf(folder),1),await this.plugin.saveSettings(),await this.plugin.addNewCommands(folder.commandName,void 0,!0),this.display()}))}new import_obsidian8.Setting(containerEl).addButton(cb=>cb.setButtonText(instance.t("editFolder.add")).onClick(async()=>{let defaultSettings=klona(this.plugin.settings.defaultTemplate??DEFAULT_FOLDER_SETTINGS);this.plugin.settings.folder.push(defaultSettings),await this.plugin.saveSettings(),this.display()}))}duplicateFolder(folder){let defaultSettings=klona(folder),duplicatedFolders=this.plugin.settings.folder.filter(f=>f.commandName.replace(/ \(\d+\)+/,"")===folder.commandName.replace(/ \(\d+\)+/,""));return duplicatedFolders.length>0&&(defaultSettings.commandName=`${folder.commandName.replace(/ \(\d+\)+/,"")} (${duplicatedFolders.length})`),defaultSettings}addTooltip(text,cb){cb.onfocus=()=>{let tooltip=document.body.createEl("div",{text,cls:"tooltip"});if(!tooltip)return;tooltip.createEl("div",{cls:"tooltip-arrow"});let rec=cb.getBoundingClientRect();tooltip.style.top=`${rec.top+rec.height+5}px`,tooltip.style.left=`${rec.left+rec.width/2}px`,tooltip.style.right=`${rec.right}px`,tooltip.style.width="max-content",tooltip.style.height="max-content"},cb.onblur=()=>{activeDocument.querySelector(".tooltip")?.remove()}}};var NoteInFolder=class extends import_obsidian9.Plugin{settings;async removeCommands(){let pluginCommands=Object.keys(this.app.commands.commands).filter(command=>command.startsWith("create-note-in-folder"));pluginCommands=pluginCommands.filter(command=>!command.replace("create-note-in-folder:","").contains("quickSwitcher-creator"));for(let command of pluginCommands)this.settings.folder.some(folder=>folder.commandName===command.replace("create-note-in-folder:",""))||this.app.commands.removeCommand(command)}async addNewCommands(oldFolder,newFolder,quickSwitcher3=!1){oldFolder!==void 0&&this.app.commands.removeCommand(`create-note-in-folder:${oldFolder}`),newFolder!==void 0&&(newFolder.path.contains("{{current}}")?this.addCommand({id:`${newFolder.commandName??newFolder.path}`,name:`${newFolder.commandName??newFolder.path}`,checkCallback:checking=>{let currentFile=this.app.workspace.getActiveFile()??void 0;return currentFile?(checking||createFolderInCurrent(newFolder,currentFile,this),!0):!1}}):this.addCommand({id:`${newFolder.commandName??newFolder.path}`,name:`${newFolder.commandName??newFolder.path}`,callback:async()=>{await createNoteInFolder(newFolder,this)}})),quickSwitcher3&&this.quickSwitcherCommand(),this.registerEvent(this.app.workspace.on("file-menu",(menu,file)=>{let folder=file instanceof import_obsidian9.TFolder?file:file.parent;if(!(newFolder?.fileMenu&&newFolder?.path.contains("{{current}}")||folder&&newFolder?.path===folder.path))return;let commandName3=newFolder.commandName??`${instance.t("create")} ${newFolder.path}`,{folderPath,defaultName}=generateFileNameWithCurrent(newFolder,file,this),path3=(0,import_obsidian9.normalizePath)(`${folderPath}/${defaultName}`);this.app.vault.getAbstractFileByPath(newFolder.path.replace("{{current}}",path3))&&!newFolder.template.increment&&(commandName3=`Open note : ${newFolder.commandName??newFolder.path}`),!menu.items.some(item=>item.titleEl?.getText()===commandName3)&&(menu.addSections(["create-note-in-folder"]),menu.addItem(item=>{item.setTitle(commandName3).setIcon("file-plus").setSection("create-note-in-folder").onClick(()=>{createFolderInCurrent(newFolder,file,this)})}))}))}removeDisabledMenu(disabled,toRemove="all"){this.registerEvent(this.app.workspace.on("file-menu",menu=>{let commandName3=`Create note : ${disabled.commandName??disabled.path}`;toRemove==="increment"?commandName3=`Open note : ${disabled.commandName??disabled.path}`:toRemove==="create"&&(commandName3=`Create note : ${disabled.commandName??disabled.path}`);for(let item of menu.items){let itemName=item.titleEl?.getText()??item.titleEl;itemName===commandName3?item.dom.addClasses(["create-note-in-folder","disabled"]):toRemove==="all"&&(itemName===commandName3||itemName===`Open note : ${disabled.commandName??disabled.path}`)&&item.dom.addClasses(["create-note-in-folder","disabled"])}}))}async triggerTemplater(file,settings){if(!this.app.plugins.enabledPlugins.has("templater-obsidian"))return;let templatePath=settings.templater;if(!templatePath)return;let templateFile=this.app.vault.getAbstractFileByPath(templatePath);if(templateFile){if(!(templateFile instanceof import_obsidian9.TFile)){new import_obsidian9.Notice(instance.t("error.templateNotFile",{path:templatePath}));return}}else{new import_obsidian9.Notice(instance.t("error.templateNotFound",{path:templatePath}));return}let templateContent=await this.app.vault.read(templateFile);await this.app.vault.modify(file,templateContent);try{this.app.commands.executeCommandById("templater-obsidian:replace-in-file-templater")}catch(e){console.log(e)}}quickSwitcherCommand(){this.addCommand({id:"quickSwitcher-creator",name:instance.t("quickSwitcher.simple"),callback:()=>{try{let currentFile=this.app.workspace.getActiveFile()??void 0;new ChooseFolder(this.app,this,currentFile).open()}catch(e){console.log(e)}}})}quickSwitcherAnyFolder(){this.settings.enableAllFolder?this.addCommand({id:"quickSwitcher-creator-anyFolder",name:instance.t("quickSwitcher.anyFolder"),callback:()=>{try{let isCurrentFile=this.app.workspace.getActiveFile()??void 0;new ChooseInAllFolder(this.app,this,this.settings.filterAnyFolderCommand??!1,isCurrentFile).open()}catch(e){console.log(e)}}}):this.app.commands.removeCommand("create-note-in-folder:quickSwitcher-creator-anyFolder")}async onload(){if(console.info(`${this.manifest.name} v${this.manifest.version} loaded`),await instance.init({lng:translationLanguage,fallbackLng:"en",resources:ressources,returnNull:!1}),await this.loadSettings(),this.settings.folder.length>0&&typeof this.settings.folder[0]=="string"){let oldFolders=this.settings.folder;this.settings.folder=[];for(let folder of oldFolders){let defaultSettings=klona(DEFAULT_FOLDER_SETTINGS);defaultSettings.path=folder,this.settings.folder.push(defaultSettings)}await this.saveSettings()}for(let folder of this.settings.folder)Object.values(folder).includes(folder.template)||(folder.fileName=folder.formatName,folder.template={type:folder.typeName==="string"?"none":folder.typeName,format:folder.formatName,position:"append",separator:""},delete folder.TypeName,delete folder.formatName),await this.saveSettings();this.addSettingTab(new NoteInFolderSettingsTab(this.app,this));let folders=this.settings.folder;for(let folder of folders)folder.commandName=folder.commandName&&folder.commandName.length>0?folder.commandName:folder.path,await this.saveSettings(),await this.addNewCommands(void 0,folder);this.quickSwitcherCommand(),this.quickSwitcherAnyFolder()}onunload(){console.info(`${this.manifest.name} v${this.manifest.version} unloaded`)}mergeFolderSettings(){for(let i in this.settings.folder)this.settings.folder[i]=merge(DEFAULT_FOLDER_SETTINGS,this.settings.folder[i]);return this.settings}async loadSettings(){let loadData=await this.loadData();try{this.settings=merge(DEFAULT_SETTINGS,loadData),this.settings=this.mergeFolderSettings()}catch{console.warn("Error while merging folder settings ; use default merge"),this.settings=Object.assign({},DEFAULT_SETTINGS,await this.loadData())}}async saveSettings(){await this.saveData(this.settings)}};
